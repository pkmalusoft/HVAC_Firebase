@model HVAC.Models.CustomerReceiptSearch
@{
    ViewBag.Title = "List";
    ViewBag.pTitle = "Supplier Payment";
    ViewBag.pageTitle = "Supplier Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isadd = true;
    var ismodify = true;
    var isdelete = true;
    var isprint = true;
    var _decimal = Session["Decimal"].ToString();
    string path = "/SupplierPayment/Index";

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        HVAC.Models.SourceMastersModel obj = new HVAC.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isprint = obj.GetPrintpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isdelete = obj.GetDeletepermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }

}


<style>
   
    #tbl1 tr {
        height: 35px;
    }

    .panel {
        background-color: unset;
        box-shadow: unset;
    }

    /*.tblbackground {
            background-color: #fff;
            box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
            border-radius: 10px;
        }*/

    .box-footer {
        background-color: unset;
    }

    .searchtabs {
        box-shadow: unset !important;
        border-radius: unset !important;
    }
</style>


<script type="text/javascript">
    $(document).ready(function () {
        var startdate = '@Session["FyearFrom"].ToString()';
        var enddate = '@Session["FyearTo"].ToString()';
        var sd = new Date(startdate.split('-')[1] + '-' + startdate.split('-')[0] + '-' + startdate.split('-')[2]);
        var ed = new Date(enddate.split('-')[1] + '-' + enddate.split('-')[0] + '-' + enddate.split('-')[2]);


        $('#dataTables-example tfoot th:not(:last)').each(function () {
            var title = $(this).text();
            $(this).html('<input type="text"  style="width:100%" />');
        });


        var table = $('#dataTables-example').DataTable({ "sPaginationType": "full_numbers", "order": [[0, "desc"]] });

        table.columns().every(function () {
            var that = this;

            $('input', this.footer()).on('keyup change', function () {
                if (that.search() !== this.value) {
                    that
                        .search(this.value)
                        .draw();
                }
            });
        });

    });
</script>
<script type="text/javascript">
   function funExportToPDF(id) {
          //showLoading();
        $.ajax({
             url: '@Url.Action("ReceiptReport", "SupplierPayment")',

            type: "GET",
            data: { id:id},
                    dataType: "json",
            success: function (response) {
                if (response.result == "ok") {
                    $('#frmPDF').attr('src', @Url.Content("~/ReportsPDF/") + response.path); //''

                    setTimeout(function () {
                        //hideLoading();
                        window.open('@Url.Content("~/ReportsPDF/")' + response.path);
                        //frame = document.getElementById("frmPDF");
                        //framedoc = frame.contentWindow;
                        //framedoc.focus();
                        //framedoc.print();
                    }, 1000);
                } else {
                    alert(resuponse.message);
                    //hideLoading();
                }
            },
        });

        return false;
    }
</script>


    @if (ViewBag.SuccessMsg != null)
    {
        <script type="text/javascript">
           $(document).ready(function () {
               //$.notify("@ViewBag.SuccessMsg ", "success");
           });
        </script>
    }

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="card">
<div class="card-body">
    <div class="row">
       <div class="col-md-2">
                                <div class="mb-2">
                                    <label class="col-form-label">From Date</label>
                                    <div class="docs-datepicker">
                                        <div class="input-group">
                                            <input type="text" class="form-control docs-date" name="FromDate" id="FromDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@Model.FromDate.ToShortDateString()"
                                                placeholder="Pick a date" autocomplete="off">
                                            <button type="button"
                                                    class="btn btn-secondary docs-datepicker-trigger"
                                                    disabled>
                                                <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                        <div class="docs-datepicker-container"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-2">
                                    <label class="col-form-label">To Date</label>
                                    <div class="docs-datepicker">
                                        <div class="input-group">
                                            <input type="text" class="form-control docs-date" name="ToDate" id="ToDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@Model.ToDate.ToShortDateString()"
                                                placeholder="Pick a date" autocomplete="off">
                                            <button type="button"
                                                    class="btn btn-secondary docs-datepicker-trigger"
                                                    disabled>
                                                <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                        <div class="docs-datepicker-container"></div>
                                    </div>
                                </div>
                            </div>
        <div class="col-md-2">
           <div class="mb-2">
            <label for="Receipt No." class="col-form-label">Search Document No.</label>
            @Html.TextBoxFor(mode => mode.ReceiptNo, new { @class = "form-control text-right" })
        </div>
        </div>
        <div class="col-md-2">
         <div class="mb-2 mt-2">
        <button type="submit" class="btn btn-success waves-effect waves-light filter btn_top">
                            <i class="bx bx-search mt-1" style="font-size: 21px;"></i>
                        </button>
           </div>
        </div>

        <div class="col-md-4 text-md-end">
            @if (@HVAC.Models.CommonFunctions.CheckCreateEntryValid() == false || !isadd)
            {
                <a  class="btn btn-primary waves-effect waves-light text-md-end btn_top" href="/SupplierPayment/Create" disabled><i class="mdi mdi-plus me-1"></i> New Supplier Payemnt</a>
               
            }
            else
            {
                <a  class="btn btn-primary waves-effect waves-light text-md-end btn_top" href="/SupplierPayment/Create"><i class="mdi mdi-plus me-1"></i> New Supplier Payemnt</a>
            }


        </div>
    </div>
</div>
</div>
    <div class="card">
        <div class="card-body">
        <table class="table table-bordered mb-0" id="datatable" style="width:100%">
                <thead class="table-light">
                    <tr>
                        <th>
                            Document No.
                        </th>
                        <th>
                            Payment Date
                        </th>
                        <th>
                            SupplierName
                        </th>
                        <th>Particulars</th>
                        <th>Payment Mode</th>
                        <th>Amount</th>
                        <th></th>
                    </tr>
                </thead>
                
                <tbody>
                    @foreach (var item in Model.Details)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.DocumentNo)
                            </td>
                            <td>
                                @HVAC.Models.CommonFunctions.GetShortDateFormat(item.RecPayDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PartyName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BankName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PaymentMode)
                            </td>
                            <td style="text-align:right">
                                @HVAC.Models.CommonFunctions.GetFormatNumber(item.Amount, @_decimal)
                                @{
                                    if (item.FCAmount > 0)
                                    {
                                        <br />
                                        <span class="color_blue">@HVAC.Models.CommonFunctions.GetFormatNumber(item.FCAmount, @_decimal)</span>
                                    }
                                }
                            </td>
                            <td>
                            <div class="d-flex gap-3">
                                @if (ismodify)
                                {
                                    <a href='@Url.Action("Create", "SupplierPayment", new { id = item.RecPayID })' class="text-success" data-toggle="tooltip" data-placement="left" title="Click here"><i class="mdi mdi-pencil font-size-18"></i></a>
                                }
                                
                                @if (isdelete)
                                {
                                    <a href="#" onclick="DeleteSupplier(@item.RecPayID)" class="text-danger"><i class="mdi mdi-delete font-size-18"></i></a>
                                }
                                
                                @if (isprint)
                                {
                                    <a href="#" class="text-secondary"><i class="mdi mdi-printer font-size-18" aria-hidden="true" onclick="funExportToPDF(@item.RecPayID)"></i></a>
                                }

                                @*@if (isprint)
                                {

                                    <a href="#"><i class=" fa fa-file-pdf-o print" style="color:red"></i></a>
                                }*@
                        </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

}







<script type="text/javascript">
    

    function DeleteSupplier(ID) {
        Swal.fire({ title: "Are you sure?", text: "Do you want to delete this Record?", icon: "warning", showCancelButton: !0, confirmButtonColor: "#34c38f", cancelButtonColor: "#f46a6a", confirmButtonText: "Yes, delete it!" }).then(
            function (t) {
                if (t.value) {

                    $.ajax({
                        type: "POST",
                        url: '/SupplierPayment/DeletePayment/',
                        datatype: "html",
                        data: {
                            'id': ID
                        },
                        success: function (response) {
                            if (response.status == "OK") {
                                Swal.fire("Delete Status!", response.message, "success");
                                window.location.reload();
                            }
                            else {
                                Swal.fire("Delete Status!", response.message, "error");
                            }
                        }
                    });

                }
            });

    }
</script>


