@model HVAC.Models.AcInvoiceOpeningVM

@{
    ViewBag.Title = "Supplier Opening";
    ViewBag.pTitle = "Supplier Opening";
    ViewBag.pageTitle = "Accounts Payable";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var _decimal = Convert.ToInt32(@Session["Decimal"].ToString());
    var i = 0;
    var isadd = true;
    var ismodify = true;
    var isdelete = true;

    string path = Request.Url.AbsolutePath.ToLower();

    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        HVAC.Models.SourceMastersModel obj = new HVAC.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isdelete = obj.GetDeletepermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}
<style>
    tfoot {
        display: table-header-group;
    }

    .searchdiv {
        background-color: #fff;
        width: 100%;
        margin: 0 auto;
        max-width: 500px;
        padding: 0px;
        margin-top: 15px;
        border-radius: 10px;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
    }
</style>
<script type="text/javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function setNumberDecimal(obj) {

        $(obj).val(parseFloat($(obj).val()).toFixed(@_decimal));
    }


    $(document).ready(function () {


        $('.text-right').blur(function () {
            if (isNaN(parseInt($(this).val()))) {
                $(this).val('0.00');
            } else {
                var amt = parseFloat($(this).val());
                $(this).val(amt.toFixed(@_decimal));
            }
        });
        $('.text-right').change(function () {

            var id = $(this).attr('id');
            var id1 = $(this).attr('id');
            if (id == 'txtDebit') {
                if ($(this).val() > 0) {
                    $('#txtCredit').val(0);
                }
            }
            else {
                if ($(this).val() > 0) {
                    $('#txtDebit').val(0);
                }
            }
        });



        $("#AcHead").change(function () {
            if ($("#AcHeadID").attr('label') != $('#AcHead').val()) {
                $("#AcHead").val('');
                $("#AcHead").focus();
            }
            //else {
            //    if ($("#AcHeadName").val() != '') {
            //        checkitemexists($("#AcHeadName").val())
            //    }
            //}
        });


    });

</script>

<section class="content">
    @if (ViewBag.SuccessMsg != null)
    {
        <script type="text/javascript">
         $(document).ready(function () {
             $.notify("@ViewBag.SuccessMsg ", "success");
         });
        </script>
    }

    @if (ViewBag.ErrorMsg != null)
    {
        <script type="text/javascript">
         $(document).ready(function () {
             $.notify("@ViewBag.ErrorMsg ", "error");
         });
        </script>
    }

<div class="row no_mar_cre">
    @using (Html.BeginForm("Create", "CustomerOpening", FormMethod.Post, new { @class = "needs-validation ", @novalidate = "novalidate" }))    

        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="" style="margin-top: 0px !important;">
                <div class="card searchdiv">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">                                                                        
                                        <label class="col-form-label">Supplier Type</label>
                                        <select class="form-select" id="SupplierTypeID" name="SupplierTypeID" svalue="@Model.SupplierTypeID">
                                            @foreach (var item in ViewBag.SupplierType)
                                            {
                                                <option value="@item.SupplierTypeID">@item.SupplierType1</option>
                                            }
                                        </select>                                    
                                    <div class="invalid-feedback">
                                        Select Supplier Type
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="required">Supplier Name</label>
                                    @Html.HiddenFor(model => model.AcHeadID)
                                    @Html.HiddenFor(model => model.PartyID)
                                    @Html.HiddenFor(model => model.AcOPInvoiceDetailId)
                                    @Html.HiddenFor(model => model.AcOPInvoiceMasterID)
                                    @Html.TextBoxFor(model => model.PartyName, new { @class = "form-select", @required = "required" })
                                    <div class="invalid-feedback">
                                        Select Customer Name
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="required">Invoice No.</label>
                                    @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "form-control", @required = "required" })
                                    <div class="invalid-feedback">
                                        Enter Invoice No.
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="required">Invoice No.</label>
                                    <div class="docs-datepicker">
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.InvoiceDate, "{0:dd-MM-yyyy}", new { @class = "form-control", @required = "required" })
                                            <button type="button"
                                                    class="btn btn-secondary docs-datepicker-trigger"
                                                    disabled>
                                                <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                        <div class="docs-datepicker-container"></div>
                                    </div>                                    
                                    <div class="invalid-feedback">
                                        Enter Invoice Date
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row ">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="required">Debit</label>
                                    @Html.TextBoxFor(model => model.Debit, new { @class = "form-control text-right", @onkeypress = "return isNumberKey(event)", @onchange = "setNumberDecimal(this)", id = "txtDebit" })
                                    
                                     <div class="invalid-feedback">
                                            Enter Invoice Amount
                                        </div>
                                    </div>
                                </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="required">Credit</label>
                                    @Html.TextBoxFor(model => model.Credit, new { @class = "form-control text-right", @onkeypress = "return isNumberKey(event)", @onchange = "setNumberDecimal(this)", id = "txtCredit" })
                                </div>
                            </div>
                        </div>

                        <div class="row " style="padding-top:10px">
                            <div class="" style="text-align:right;padding:10px">

                                <input type="submit" value="Save" class="btn btn-success" id="btnsave" />

                                &nbsp;
                                <a href='@Url.Action("Index", "SupplierOpening")' class="btn btn-secondary">Cancel</a>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }
    </div>

</section>

@section scripts{

 
    <script src="~/Scripts/JS/SupplierOpeningCreate.js"></script>
}
