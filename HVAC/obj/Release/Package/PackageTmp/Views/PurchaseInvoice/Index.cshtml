@model HVAC.Models.SupplierInvoiceSearch

@{
    ViewBag.Title = "List";
    ViewBag.pTitle = "Purchase Invoice";
    ViewBag.pageTitle = "Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isadd = true;
    var ismodify = true;
    var isdelete = true;
    var isprint = true;
    var isview = true;
    string path = "/PurchaseInvoice/Index";
    if (Convert.ToInt32(Session["UserRoleID"]) > 1)
    {
        HVAC.Models.SourceMastersModel obj = new HVAC.Models.SourceMastersModel();
        isadd = obj.GetAddpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        ismodify = obj.GetModifypermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isdelete = obj.GetDeletepermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isprint = obj.GetPrintpermission(Convert.ToInt32(Session["UserRoleID"]), path);
        isview = obj.GetViewpermission(Convert.ToInt32(Session["UserRoleID"]), path);

    }
}



<script type="text/javascript">

    $(document).ready(function () {
        var startdate = '@Session["FyearFrom"].ToString()';
        var enddate = '@Session["FyearTo"].ToString()';
        var sd = new Date(startdate.split('-')[1] + '-' + startdate.split('-')[0] + '-' + startdate.split('-')[2]);
        var ed = new Date(enddate.split('-')[1] + '-' + enddate.split('-')[0] + '-' + enddate.split('-')[2]);


        $('#dataTables-example tfoot th').each(function () {
            var title = $(this).text();
            $(this).html('<input type="text" />');
        });


        var table = $('#dataTables-example').DataTable({
            "aaSorting": [],
            //"dom": '<"top"i>rt<"top"flp><"clear">',
            //dom: "<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>" +
            //       "<'row'<'col-sm-12'tr>>" +"<'row'<'col-sm-5'i><'col-sm-7'p>>",
            //"pagingType": "simple"
        });
        table.draw();
        table.columns().every(function () {
            var that = this;

            $('input', this.footer()).on('keyup change', function () {
                if (that.search() !== this.value) {
                    that
                        .search(this.value)
                        .draw();
                }
            });
        });

        $('#SupplierTypeId').val(@ViewBag.SupplierTypeId).trigger('change');

    });


</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-2">
                    <label class=" required headinglabel">Supplier Type</label>
                    @Html.DropDownList("SupplierTypeId", new SelectList(@ViewBag.SupplierType, "SupplierTypeID", "SupplierType1"), "Select All", new { @class = "form-select", @id = "SupplierTypeId" })
                    @*@Html.DropDownList("StatusId", new SelectList(@ViewBag.CourierStatus, "CourierStatusID", "CourierStatus", @ViewBag.StatusId), "Select All", new { @class = "form-control", @value = 1, @id = "StatusId", @name = "StatusId" })*@
                </div>
                <div class="col-md-2">
                    <div class="mb-2">
                        <label class="headinglabel">From Date</label>
                        <div class="docs-datepicker">
                            <div class="input-group">
                                <input type="text" class="form-control docs-date" name="FromDate" id="FromDate" value="@Model.FromDate.ToShortDateString()"
                                       placeholder="Pick a From Date" autocomplete="off">
                                <button type="button"
                                        class="btn btn-secondary docs-datepicker-trigger"
                                        disabled>
                                    <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                </button>
                            </div>
                            <div class="docs-datepicker-container"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="mb-2">
                        <label class="headinglabel">To Date</label>
                        <div class="docs-datepicker">
                            <div class="input-group">
                                <input type="text" class="form-control docs-date" name="ToDate" id="ToDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@Model.ToDate.ToShortDateString()"
                                       placeholder="Pick a date" autocomplete="off">
                                <button type="button"
                                        class="btn btn-secondary docs-datepicker-trigger"
                                        disabled>
                                    <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                </button>
                            </div>
                            <div class="docs-datepicker-container"></div>
                        </div>
                    </div>
                </div>
                <div class=" col-md-2">
                    <div class="mb-2">
                        <label for="Receipt No." class="col-form-label">Search Invoice No.</label>
                        @Html.TextBoxFor(mode => mode.InvoiceNo, new { @class = "form-control text-right ora_border" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="mb-2">
                        <button type="submit" class="btn btn-success waves-effect waves-light filter btn_top reload">
                            <i class="bx bx-revision mt-1" style="font-size: 21px;"></i>
                        </button>
                    </div>
                </div>

                <div class="col-md-2 text-md-end">

                    @if (@HVAC.Models.CommonFunctions.CheckCreateEntryValid() == false || !isadd)
                    {
                        <a disabled class="btn btn-primary waves-effect waves-light  btn_top text-md-end" href="/PurchaseInvoice/Create" title="Create Not allowed in the previous financial year"><i class="mdi mdi-plus me-1"></i> New Purchase Invoice</a>
                    }
                    else
                    {
                        <a class="btn btn-primary waves-effect waves-light  btn_top text-md-end" href="/PurchaseInvoice/Create"><i class="mdi mdi-plus me-1"></i> New Purchase Invoice</a>
                    }


                </div>
            </div>
        </div>
    </div>
    

     

    <div class="card">
        <div class="card-body">
            <table class="table table-bordered mb-0" id="datatable" style="width:100%">
                <thead class="table-light">
                    <tr>
                        <th>
                            Invoice Date
                        </th>
                        <th>
                            Invoice No
                        </th>
                        <th>
                            Supplier Nme
                        </th>
                        <th>
                            Supplier Type
                        </th>
                        <th>
                            Amount
                        </th>
                        <th> Action</th>
                    </tr>

                </thead>

                <tbody>
                    @foreach (var item in Model.Details)
                    {
                        <tr>

                            <td class="text-right">

                                @HVAC.Models.CommonFunctions.GetShortDateFormat(@item.InvoiceDate)

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SupplierName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SupplierType)
                            </td>
                            <td class="text-right">
                                @*@Html.DisplayFor(modelItem => item.Amount)*@
                                @HVAC.Models.CommonFunctions.GetDecimalFormat(item.Amount, "2")
                            </td>
                            <td>
                                <div class="gap-3 d-flex">
                                    <a href="@Url.Action("Create", new { id = item.SupplierInvoiceID })" class="text-success"><i class="mdi mdi-pencil font-size-18"></i></a>
                                    <a href="#" onclick="Delete(@item.SupplierInvoiceID)" class="text-danger"><i class="mdi mdi-delete font-size-18"></i></a>
                                </div>
                            </td>
                        </tr>

                    }
                </tbody>

            </table>
        </div>
        </div>
        }


        <script type="text/javascript">
            // function Delete(ID) {
            //     if (confirm("Are you sure, You want to Delete Invoice?")) {
            //         window.location.href = "/SupplierInvoice/Delete?id=" + ID;
            //     }
            // }

            function Delete(ID) {
                Swal.fire({ title: "Are you sure?", text: "Do you want to delete this?", icon: "warning", showCancelButton: !0, confirmButtonColor: "#34c38f", cancelButtonColor: "#f46a6a", confirmButtonText: "Yes, delete it!" }).then(
                    function (t) {
                        if (t.value) {

                            $.ajax({
                                type: "POST",
                                url: '/SupplierInvoice/DeleteConfirmed',
                                datatype: "html",
                                data: {
                                    'id': ID
                                },
                                success: function (response) {
                                    if (response.status == "OK") {
                                        Swal.fire("Delete Status!", response.message, "success");
                                        window.location.reload();
                                    }
                                    else {
                                        Swal.fire("Delete Status!", response.message, "error");
                                    }
                                }
                            });

                        }
                    });

            }
        </script>



 
