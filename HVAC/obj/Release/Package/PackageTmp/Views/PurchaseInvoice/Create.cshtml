@model HVAC.Models.SupplierInvoiceVM

@{
    //ViewBag.Title = "Create";
    // ViewBag.pTitle = "Purchase Invoice";
    ViewBag.pageTitle = "Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var _decimal = @Session["Decimal"].ToString();
    int i = 0;
    HVAC.Models.HVACEntities db = new HVAC.Models.HVACEntities();
}


<script type="text/javascript">
    var AWBItems = [];
    var RemoveAWBItems = [];

    function addCommas(nStr) {

        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
    }
    return x1 + x2;
    }
    function setTwoNumberDecimal(obj) {

       $(obj).val(parseFloat($(obj).val()).toFixed(@_decimal));
    }

    function setThreeNumberDecimal(obj) {
       $(obj).val(parseFloat($(obj).val()).toFixed(3));
    }
    function deletetrans(obj, i) {
        debugger;
        $(obj).parent().parent().addClass('hide');
        var obj1 = $(obj).parent().parent().find('.hdndeleted');
        $(obj1).val(true);
    }
    //$(function () {
    //    $('#FromDate').datetimepicker({ format: 'DD-MM-YYYY' });

    //    $('#ToDate').datetimepicker({ format: 'DD-MM-YYYY' });

    //    $('#InvoiceDate').datetimepicker({ format: 'DD-MM-YYYY' });

    //    var d = new Date();
    //    var curr_date = d.getDate();
    //    var curr_month = d.getMonth() + 1;
    //    var curr_year = d.getFullYear();

    //    var reqdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();

    //    $('#InvoiceDate').val(reqdate);
    //});

    function checkduplicateachead(oacheadid) {
        debugger;
        var idtext = 'txtproductname_';
        var maxrow = $('#detailsbody > tr').length;
        $('#hdnItemCount').val(maxrow);
        if (maxrow > 0) {
            var duplicate = false;
            $('[id^=' + idtext + ']').each(function (index, item) {
                var deleted = $('#hdndeleted_' + index).val();
                if (deleted != "true") {
                    var accheadid = $('#txtproductid_' + index).val();
                    if (accheadid.trim() == oacheadid.trim()) {
                        $('#validations').show();
                        $('#validations').html('Duplicate AcHead!');
                        duplicate = true;
                    }
                }
                if (duplicate == false && index == (parseInt(maxrow - 1))) {
                    additem();
                    $('#validations').hide();
                    $('#validations').html('* Please fill mandatory fields!');
                    return;
                }
            });
        }
        else {
            additem();
            $('#validations').hide();
            $('#validations').html('* Please fill mandatory fields!');
            return;
        }
    }
    function additem() {
        debugger;
            var AcHead = $("#txtAcHead").val();
            var AcHeadId = $("#txtAcHeadId").val();
            var producttypeid = $('#ProductTypeID').val();
            var producttype= $('#ProductTypeID option:selected').text();
            var productname = $("#txtProductName").val();
            var productid = $("#txtProductID").val();
            var Particulars = $("#Particulars").val();
            var Rate = $("#Rate").val();
            var Qty = $("#Qty").val();
            var amount = $('#Amount').val();
            var currency = 1; //$("#currency").val();
            var currencyname = 'PCS'; //$("#currency option:selected").text();
            var unitname = $('#UnitID option:selected').text();
            var unitid = $('#UnitID').val();
        var Taxpercent = $("#Taxpercent").val();
        var Project = $('#DDProject option:selected').text();
        var Projid = $('#DDProject option:selected').val();
            var exchangereate = 1;
            @*if (currency == null || currency == "") {
                $('#currency').val(@ViewBag.CurrencyId);
                var currency = $("#currency").val();
            }

            if (Taxpercent == null || Taxpercent == "") {
                $("#Taxpercent").val(0);
                Taxpercent = $("#Taxpercent").val();

            }*@


        var netvalue = parseFloat(amount) + (parseFloat(amount) * parseFloat(Taxpercent) / 100);

        var i = $('#detailsbody > tr').length;

        var Projecthtml ='';

        if (Projid != 0 || Projid != '') {
            Projecthtml = '<td> <input class="text-right form-control" type="text" readonly id="txtproject_' + i + '" value="' + Project + '" /> <input type="hidden" id="hdnPro_' + i + '" value="' + Projid + '"/></td>'

        }
        else { Projecthtml='<td></td>'}



                        //<td>' + AcHead + '<input type="hidden" id="hdnacheadid_' + AcHeadId + ' />
        currency = 1;
        var acheadid = AcHeadId;
        var headhtml1 = '<td><input type="hidden" id="hdnproducttypeid_' + i + '" value="' + producttypeid + '"/>' + producttype + '</td>';
        var headhtml = '<td><input type="hidden" class="hdndeleted"  id="hdndeleted_' + i + '" value="false" /> <input class="form-select" type="hidden" acheadid="' + acheadid + '" id="txtachead_' + i + '" value="' + AcHead + '" /><input class="form-select" type="hidden" id="txtproductid_' + i + '" value="' + productid + '" /><input class="form-select"  type="text" productid="' + productid + '" id="txtproductname_' + i + '" value="' + productname + '"/></td>';

        var particulars = Particulars;
        var particularshtml = '<td> <input type="text" class="form-control" id="txtparticulars_' + i + '" value="' + particulars + '" /> </td>';
        var unithtml = '<td><input type="hidden" id="txtunitid_' + i + '" value="' + unitid + '"/><input type="text" tyle="width:100px"  class="form-control" id="txtunitname_' + i + '" value="' + unitname + '" /> </td>';

        var ratehtml = '<td> <input  class="text-right form-control" type="text" onchange="calculatevalue(' + i + ')" id="txtRate_' + i + '" value="' + parseFloat(Rate).toFixed(@_decimal) + '" /> </td>';
        var qtyhtml = '<td> <input type="text" class="form-control" onchange="calculatevalue(' + i + ')"  id="txtQty_' + i + '" value="' + parseFloat(Qty).toFixed(@_decimal) + '" /> </td>';
        var amounthtml = '<td><input type="text" class="form-control" readonly id="txtAmt_' + i + '" value="' + parseFloat(amount).toFixed(@_decimal) + '" /></td>';

        var taxhtml = '<td> <input class="text-right form-control" type="text" style="width:100px" onchange="calculatevalue(' + i + ')"  id="txttax_' + i + '" value="' + Taxpercent + '" /> </td>';
        var netvaluehtml = '<td> <input class="text-right form-control"  type="text" readonly id="txtnetval_' + i + '" value="' + parseFloat(netvalue).toFixed(@_decimal) + '" /> </td>';
        var delHtml = '<td><a href="javascript:void(0)" class="text-danger" onclick="deletetrans(this,' + i  + ')"><i class="mdi mdi-delete font-size-18"></i></a></td>';
        var ConsignmentHTML = '<td><a href="Javascript:void(0)" style="float:right" title="Edit AWB Reference" onclick="EditConsignmentPopup(' + i + ')"><i class="fa fa-eye" ></i></a ></td>';
        var StockHTML = '<td><a href="Javascript:void(0)" style="float:right" title="Edit Purchase" onclick="EditConsignmentPopup(' + i + ')"><i class="fa fa-file" ></i></a ><td> ';
        var html = '<tr><input type="hidden" id="hdndetailid_' + i + '" value="0" />' + currencyname + '<input type="hidden" id="hdncurrency_' + i + '" value="' + currency + '"</><input type="hidden" id="hdnexrate_' + exchangereate + '" />';

        //var html = '<tr><td><input type="hidden" id="hdndetailid_' + i + '" value="0" />' + currencyname + '<input type="hidden" id="hdncurrency_' + i + '" value="' + currency + '"</></td><td><input type="hidden" id="hdnexrate_' + exchangereate + '" />'  + parseFloat(exchangereate).toFixed(@_decimal) + '</td>';

        html = html + headhtml1 + headhtml + particularshtml + unithtml + qtyhtml + ratehtml + amounthtml + taxhtml + netvaluehtml + Projecthtml+delHtml + '</tr>';

        $("#detailsbody").append(html);
        total();
        $('#txtAcHeadId').val(0);
        $('#txtAcHead').val('');
        $("#Particulars").val('');
        $("#Rate").val(0.0);
        $("#Qty").val(0.0);
        $("#Amount").val(0.0);
        $('#BookNo').val('');
        //$('#AWBCount').val('');
        //$('#AWBEnd').val('');
        //$('#AWBStart').val('');
        $("#Taxpercent").val('0');
        $("#NetValue").val('0');
        $('#DDProject').val('');
       // $('#ProductTypeID').val('');
        $('#txtProductName').val('');
        $("#txtProductName").focus();


    }
    $(document).ready(function () {

        $('#StockType').change(function () {
            if ($('#StockType').val() == '0')
            {
                $('#divawbpurchase').addClass('hide');
                $('#divcartonpurchase').addClass('hide');
            }
            else if ($('#StockType').val() == '1') { //awb purhcase
                $('#divawbpurchase').removeClass('hide');
                $('#divcartonpurchase').addClass('hide');
            }
            else if ($('#StockType').val() == '2') { //carton stock
                $('#divawbpurchase').addClass('hide');
                $('#divcartonpurchase').removeClass('hide');
            }

        });
        //$('#SupplierTypeId').on('change', function () {

        //    if ($('#SupplierTypeId').val() == 3 || $('#SupplierTypeId').val() == 4) {
        //        $('#InvoiceNo').removeAttr('readonly');
        //    }
        //    else {
        //        $('#InvoiceNo').attr('readonly', 'readonly');
        //    }
        //});
        $('#currency').val(@ViewBag.CurrencyId);

        if ('@Model.SupplierInvoiceID' > 0) {
            $('#divothermenu').removeClass('hide');
            $('#btnsave').html('Update');
            $.ajax({
                type: "POST",
                url: "/PurchaseInvoice/GetSupplierInvDetails",
                datatype: "Json",
                data: { Id: '@Model.SupplierInvoiceID' },
                success: function (response) {
                    $.each(response.InvoiceDetails, function (index, item) {
                        debugger;
                        var AcHeadname = item.AcHeadName;
                        var AcHeadId = item.AcHeadId;
                        var productid = item.ProductID;
                        var productname = item.ProductName;
                        var producttypeid = item.ProductTypeID;
                        var producttype = item.ProductType;
                        var Particulars = item.Particulars;
                        var Rate = item.Rate;
                        var Qty = item.Quantity;
                        var amount = item.Amount;
                        var currency = item.Currency;
                        var CurrencyID = item.CurrencyID;
                        var Taxpercent = item.TaxPercentage;
                        var detailid = item.SupplierInvoiceDetailID;
                        var exchangereate = 1;
                        var netvalue = item.Value;
                        var unitid = item.UnitID;
                        var unitname = item.UnitName;
                        var projectname = item.ProjectName;
                        var ProjectId = item.ProjectID;
                        //AWBItems.push(value);
                        //$("#detailsbody").append('<tr awbno="' + value.InvNo + '"><td>' + value.AcHeadName + '</td><td>' + value.Particulars + '</td><td class="text-right" >' + parseFloat(value.Rate).toFixed(3) + '</td><td class="text-right" >' + value.Quantity + '</td><td>' + value.Currency + '</td><td class="text-right" >' + parseFloat(value.CurrencyAmount).toFixed(3) + '</td><td class="text-right" >' + parseFloat(value.Amount).toFixed(3) + '</td><td class="text-right" >' + value.TaxPercentage + '</td><td class="text-right">' + parseFloat(value.Value).toFixed(3) + '</td><td><a awbno="' + value.InvNo + '" href="javascript:void(0);" class="rem">Remove</a></td></tr>');
                        var i = $('#detailsbody > tr').length;
                        var purchasehtml = '<td><input type="hidden" id="hdnproducttypeid_' + i + '" value="' + producttypeid + '"/>' + producttype + '</td>';

                        //<td>' + AcHead + '<input type="hidden" id="hdnacheadid_' + AcHeadId + ' />

                        //ProjectNAme tdstart
                        var Projecthtml = '';

                        if (ProjectId != 0 || ProjectId != null) {
                            Projecthtml = '<td> <input class="text-right form-control" style="width:200px" type="text" readonly id="txtproject_' + i + '" value="' + projectname + '" /> <input type="hidden" id="hdnPro_' + i + '" value="' + ProjectId + '"/></td>'
                        }
                        else { Projecthtml = '<td></td>'; }



                        var acheadid = AcHeadId;
                        var headhtml = purchasehtml + '<td>' + '<input type="hidden" id="hdndeleted_' + i + '" class="hdndeleted" value="false" /> <input class="form-select" type="hidden" acheadid="' + acheadid + '" id="txtachead_' + i + '" value="' + AcHeadname + '" /> <input type="hidden" id="txtproductid_' + i + '" value="' + productid + '" /><input type="text"  class="form-select" style="width:150px"  id="txtproductname_' + i + '" value="' + productname + '" /></td>';
                        var particulars = Particulars;
                        var particularshtml = '<td> <input type="text" class="form-control" id="txtparticulars_' + i + '" value="' + particulars + '" /> </td>';
                        var unithtml = '<td><input type="hidden" id="txtunitid_' + i + '" value="' + unitid + '"/><input type="text" class="form-control"  id="txtunitname_' + i + '" value="' + unitname + '" /> </td>';
                        var ratehtml = '<td> <input type="text"  class="text-right form-control" onchange="calculatevalue(' + i + ')"  id="txtRate_' + i + '" value="' + parseFloat(Rate).toFixed(@_decimal) + '" /> </td>';
                        var qtyhtml = '<td> <input type="text" class="text-right form-control" onchange="calculatevalue(' + i + ')"  id="txtQty_' + i + '" value="' + parseFloat(Qty).toFixed(@_decimal) + '" /> </td>';
                        var amounthtml = '<td><input type="text"  class="text-right form-control" readonly id="txtAmt_' + i + '" value="' + parseFloat(amount).toFixed(@_decimal) + '" /></td>';

                        var taxhtml = '<td> <input type="text"  class="text-right form-control"  onchange="calculatevalue(' + i + ')"  id="txttax_' + i + '" value="' + Taxpercent + '" /> </td>';
                        var netvaluehtml = '<td> <input type="text" class="text-right form-control" readonly id="txtnetval_' + i + '" value="' + parseFloat(netvalue).toFixed(@_decimal) + '" /> </td>';
                        var delHtml = '<td><a href="javascript:void(0)" class="text-danger" onclick="deletetrans(this,' + i + ')" ><i class="mdi mdi-delete font-size-18"></i></a></td>';
                        var ConsignmentHTML = '<td><a href="Javascript:void(0)" style="float:right" title="Add Consignments" onclick="EditConsignmentPopup(' + i + ')"><i class="fa fa-eye" ></i></a ></td> ';
                        //var html = '<tr><td><input type="hidden" id="hdndetailid_' + i + '" value="' + detailid + '" /><input type="hidden" id="hdncurrency_' + i + '" value="' + CurrencyID + '" />' + currency + '</td><td><input type = "hidden" id = "hdnexrate_' + exchangereate + '" />' + parseFloat(exchangereate).toFixed(@_decimal) + '</td>';
                        var html = '<tr><input type="hidden" id="hdndetailid_' + i + '" value="' + detailid + '" /><input type="hidden" id="hdncurrency_' + i + '" value="' + CurrencyID + '" /><input type="hidden" id = "hdnexrate_' + exchangereate + '" />';
                        html = html + headhtml + particularshtml + unithtml + qtyhtml + ratehtml + amounthtml + taxhtml + netvaluehtml + Projecthtml+ ConsignmentHTML + delHtml + '</tr>';


                        $("#detailsbody").append(html);
                        total();

                        $("#txtproductname_" + i).autocomplete({

                            source: function (request, response) {
                                debugger;
                                $.ajax({
                                    url: '/Product/GetProductName',
                                    datatype: "json",
                                    data: {
                                        term: request.term,
                                        ProductTypeID: $('#ProductTypeID').val()
                                    },
                                    success: function (data) {
                                        debugger;
                                        response($.map(data, function (val, item) {
                                            return {
                                                label: val.ProductName,
                                                value: val.ProductID,
                                                UnitId: val.UnitId,
                                                CostRate: val.CostRate,
                                                UnitName: val.UnitName,
                                                TaxPercent: val.TaxPercent

                                            }
                                        }))
                                    }
                                })
                            },
                            minLength: 1,
                            autoFocus: false,
                            focus: function (e, ui) {
                                e.preventDefault();
                                $("#txtproductname_" + i).val(ui.item.label);

                                $('#txtunitid').val(ui.item.UnitId);
                                $('#txtunitname_' + i).val(ui.item.UnitName);
                                $('#txtrate_' + i).val(numberWithCommas(ui.item.CostRate));
                                $('#txtproductid_' + i).val(ui.item.value);



                            },
                            select: function (e, ui) {
                                e.preventDefault();
                                $('#txtunitid').val(ui.item.UnitId);
                                $('#txtunitname_' + i).val(ui.item.UnitName);
                                $('#txtrate_' + i).val(numberWithCommas(ui.item.CostRate));
                                $('#txtproductid_' + i).val(ui.item.value);


                            },

                        });



                    });


                }
            })
        }
        else {
            $('#btnsave').html('Save');

                @*var startdate = '@Session["FyearFrom"].ToString()';
                var enddate = '@Session["FyearTo"].ToString()';
                var sd = new Date(startdate.split('-')[1] + '-' + startdate.split('-')[0] + '-' + startdate.split('-')[2]);
                var ed = new Date(enddate.split('-')[1] + '-' + enddate.split('-')[0] + '-' + enddate.split('-')[2]);



                var d = new Date();
                var curr_date = d.getDate();
                var curr_month = d.getMonth() + 1;
                var curr_year = d.getFullYear();

               var reqdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();

                  $('#InvoiceDate').val(reqdate);*@
        }

        $("#SupplierName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/PurchaseInvoice/GetSupplierName',
                    datatype: "json",
                    data: {
                        term: request.term, SupplierTypeId: $("#SupplierTypeId").val()
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.SupplierName,
                                value: val.SupplierName,
                                ID: val.SupplierID,
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: true,
            select: function (e, i) {
                e.preventDefault();
                $("#SupplierName").val(i.item.label);
                $('#SupplierID').val(i.item.ID);


            },

        });
        $("#btnadd").on('click', function () {
            debugger;
            var AcHead = $("#txtAcHead").val();
            var AcHeadId = $("#txtAcHeadId").val();
            var Particulars = $("#Particulars").val();
            var productname = $('#txtProductName').val();
            var productid = $('#txtProductID').val();
            var Rate = $("#Rate").val();
            var Qty = $("#Qty").val();
            var amount = $('#Amount').val();
            var currency = $("#currency").val();
            var currencyname = $("#currency option:selected").text();

            var Taxpercent = $("#Taxpercent").val();
            var Project = $('#DDProject').val();

            var exchangereate = 1;
            @*if (currency == null || currency == "") {
                $('#currency').val(@ViewBag.CurrencyId);
                var currency = $("#currency").val();
            }

            if (Taxpercent == null || Taxpercent == "") {
                $("#Taxpercent").val(0);
                Taxpercent = $("#Taxpercent").val();

            }*@


            var netvalue = parseFloat(amount) + (parseFloat(amount) * parseFloat(Taxpercent) / 100);

            if (productid == '' || productid== 0 || productname== '')
            {
                $("#validations").show();
            }
            else if (Particulars == null || Particulars == "") {
                $("#validations").show();
            }
            else if (Rate == null || Rate == "" || Rate==0.0) {
                $("#validations").show();
            }
            else if (Qty == null || Qty == "" || Qty == 0.0) {
                $("#validations").show();
            }

            else if ($('#StockType').val() == 2) {
                if ($('#ItemSize').val() == '') {
                    $("#validations").show();
                }
                else {
                    $("#validations").hide();
                    checkduplicateachead(productid);
                }
            }
             else {
                $("#validations").hide();
                checkduplicateachead(productid);

            }

        });
        $("#btnsave").click(function () {
            var itemcount = $('#detailsbody > tr').length;

            var supplier = $("#SupplierName").val();
            var SupplierID = $("#SupplierID").val();
            var InvoiceDate = $("#InvoiceDate").val();
            var InvoiceDate = $("#InvoiceDate").val();
            var Id = $("#Id").val();

            if (supplier == null || supplier=='')
            {
                $("#validations").show();
                return false;
            }
            else if (InvoiceDate == null || InvoiceDate == '') {
                $("#validations").show();
                return false;
            }
            else if (itemcount == 0) {
                Swal.fire("Save Status!", "Add Invoice Item Details!", "warning");

                return false;
            }
            else {
                $("#validations").hide();
                AWBItems = [];
                for (i = 0; i < itemcount; i++) {
                    var deleted = $('#hdndeleted_' + i).val();
                    if (deleted != "true") {
                        var DetailID = $('#hdndetailid_' + i).val();
                        var AcHead = $("#txtachead_" + i).val();
                        var AcHeadId = $("#txtachead_" + i).attr('acheadid');
                        var productid = $("#txtproductid_" + i).val();
                        var producttypeid = $("#hdnproducttypeid_" + i).val();
                        var Particulars = $("#txtparticulars_" + i).val();
                        var Rate = $("#txtRate_" + i).val();
                        var Qty = $("#txtQty_" + i).val();
                        var amount = $('#txtAmt_' + i).val();
                        var currency = $("#hdncurrency_" + i).val();
                        var Taxpercent = $("#txttax_" + i).val();
                        var exchangereate = $("#hdnexrate_" + i).val();
                        var netvalue = $('#txtnetval_' + i).val();
                        var ProID = $('#hdnPro_'+i).val();
                        var ItemTypeId = 0;
                        var ItemId = 0;
                        var BookNo = ''
                        var AWBCount = 0;
                        var AWBStart = '';
                        var AWBEnd = ''
                        var ItemQty = 0;
                        var data = { SupplierInvoiceDetailID: DetailID, ProductTypeID: producttypeid, ProductID: productid, AcHeadID: AcHeadId, Particulars: Particulars, Rate: Rate, Quantity: Qty, TaxPercentage: Taxpercent, Amount: amount, Value: netvalue, ProjectID: ProID };
                        AWBItems.push(data);
                    }
                   //var data= {Id: Id, SupplierID: SupplierID, InvoiceDate: InvoiceDate, InvoiceNo: $("#InvoiceNo").val(), Remarks: $('#Remarks').val(), Details: JSON.stringify(AWBItems) },

                    if (i == (itemcount-1)) {
                        $.ajax({
                            type: "POST",
                            url: "/PurchaseInvoice/SaveSupplierInvoice",
                            datatype: "Json",
                            data: { Id: Id, SupplierID: SupplierID, InvoiceDate: InvoiceDate, InvoiceNo: $("#InvoiceNo").val(),   Remarks: $('#Remarks').val(), ReferenceNo :$('#ReferenceNo').val(), SupplierTypeId: $('#SupplierTypeId').val(),Details: JSON.stringify(AWBItems) },
                            success: function (response) {
                                if (response.status == "ok") {
                                    Swal.fire("Save Status!",response.message, "success");

                                    location.href = '@Url.Action("Index","PurchaseInvoice")';
                                }
                                else {
                                    Swal.fire("Save Status!", response.message, "warning");

                                    return false;
                                }
                            }
                        });
                    }
                }

            }
        });
        $("#txtProductName").autocomplete({

            source: function (request, response) {
                debugger;
                $.ajax({
                    url: '/Product/GetProductName',
                    datatype: "json",
                    data: {
                        term: request.term,
                        ProductTypeID: $('#ProductTypeID').val()
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.ProductName,
                                value: val.ProductID,
                                UnitId: val.UnitId,
                                CostRate: val.CostRate,
                                UnitName: val.UnitName,
                                TaxPercent: val.TaxPercent

                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            focus: function (event, ui) {
                $("#txtProductName").val(ui.item.label);

                $('#UnitID').val(ui.item.UnitId);
                $('#UnitName').val(ui.item.UnitName);
                $('#Rate').val(numberWithCommas(ui.item.CostRate));
                $('#txtProductID').val(ui.item.value);

                //$('#nTaxPercent').val(ui.item.TaxPercent);
                //if ($('#Qty').val() == '')
                //    $('#Qty').val(1);
               // calculateNetvalue();

            },
            select: function (e, ui) {
                e.preventDefault();
                $("#txtProductName").val(ui.item.label);

                $('#UnitID').val(ui.item.UnitId);
                $('#UnitName').val(ui.item.UnitName);
                $('#Rate').val(numberWithCommas(ui.item.CostRate));
                $('#ProductID').val(ui.item.value);

                //$('#nTaxPercent').val(ui.item.TaxPercent);
                //if ($('#Qty').val() == '')
                //    $('#Qty').val(1);
             //   calculateNetvalue();

            },

        });
        $("#txtAcHead").autocomplete({

            source: function (request, response) {
                $.ajax({
                    url: '/Accounts/AccountHead',
                    datatype: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.AcHead,
                                value: val.AcHead,
                                AcHeadID: val.AcHeadID,
                                TaxPercent: val.TaxPercent
                            }
                        }))
                    }
                })
            }, minLength: 1,
            autoFocus: false,
            select: function (e, i) {
                $("#txtAcHead").val(i.item.label);
                $('#txtAcHeadId').val(i.item.AcHeadID);
                $('#txtAcHeadId').attr('label', i.item.label)
            },
            select: function (e, i) {
                e.preventDefault();
                $("#txtAcHead").val(i.item.label);
                $('#txtAcHeadId').val(i.item.AcHeadID);
                $('#txtAcHeadId').attr('label', i.item.label)
            }
        });

        $("#txtAcHead").change(function () {
            if ($("#txtAcHead").val().trim() == '') {
                $('#txtAcHead').val('');
                $('#txtAcHeadId').val(0);
                $('#txtAcHeadId').attr('label', '')
            }
            else if ($("#txtAcHead").val() != $("#txtAcHeadId").attr('label')) {
                $('#txtAcHead').val('');
                $('#txtAcHeadId').val(0);
                $('#txtAcHeadId').attr('label', '')
                $('#txtAcHead').focus();
            }
        })


    });

    function checknumvalid(obj) {
        if ($(obj).val().trim() == '') {
            $(obj).val(0);
        }
        else if ($(obj).val() == null) {
            $(obj).val(0);
        }
    }
     function calculatevalue1() {
        checknumvalid($('#Qty'));
        checknumvalid($('#Rate'));
        checknumvalid($('#Taxpercent'));
        var qty = $('#Qty').val();
        $('#Qty').val(parseFloat(qty).toFixed(2))
        var rate = $('#Rate').val();
        $('#Rate').val(parseFloat(rate).toFixed(@_decimal))
        var Amount = parseFloat(qty) * parseFloat(rate);
        $('#Amount').val(parseFloat(Amount).toFixed(@_decimal));
        var taxper = $('#Taxpercent').val();
         $('#Taxpercent').val(parseFloat(taxper).toFixed(@_decimal));
        var tax = parseFloat(Amount) * (parseFloat(taxper) / 100.0);
        var netvalue = Amount + tax;
         $('#NetValue').val(parseFloat(netvalue).toFixed(@_decimal));
    }
    function calculatevalue(index) {
        checknumvalid($('#txtQty_' + index));
        checknumvalid($('#txtRate_' + index));
        checknumvalid($('#txttax_' + index));
        var qty = $('#txtQty_' + index).val();
        $('#txtQty_' + index).val(parseFloat(qty).toFixed(2))
        var rate = $('#txtRate_' + index).val();
        $('#txtRate_' + index).val(parseFloat(rate).toFixed(@_decimal))
        var Amount = parseFloat(qty) * parseFloat(rate);
        $('#txtAmt_' + index).val(parseFloat(Amount).toFixed(@_decimal));
        var taxper = $('#txttax_' + index).val();
        $('#txttax_' + index).val(parseFloat(taxper).toFixed(@_decimal));
        var tax = parseFloat(Amount) * (parseFloat(taxper) / 100.0);
        var netvalue = Amount + tax;
        $('#txtnetval_' + index).val(parseFloat(netvalue).toFixed(@_decimal));
        total();
    }

    function ChangeSupplier() {
        $("#SupplierName").val('');
        $("#SupplierID").val('');
    }

</script>

<script type="text/javascript">

    function total() {

        var idtext = 'txtnetval_';
        var totalnet = 0;
        var totaltax = 0;
        var maxrow = $('#detailsbody > tr').length;
        if (maxrow > 0) {
            $('[id^=' + idtext + ']').each(function (index, item) {

                var deleted = $('#hdndeleted_' + index).val();
                if (deleted != "true") {
                    var nettotal = $('#txtnetval_' + index).val();
                    totalnet = parseFloat(totalnet) + parseFloat(nettotal);
                    $('#spantotal').html(parseFloat(totalnet).toFixed(2));
                }
            });
        }
    }




</script>
<style>

        .table-responsive {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }

        table {
            width: 100%;
            table-layout: auto; /* Allow table to automatically adjust its width */
        }

        /* Optional: For smaller screens, the text will wrap */
        th, td {
            word-wrap: break-word;
        }
    </style>
    <style>
        textarea {
            resize: none;
        }

        .form-control {
            padding: 0.27rem 0.45rem !important;
            font-size: 12px;
        }

        .form-select {
            padding: 0.27rem 0.45rem;
            font-size: 12px;
        }

        .newrow .form-control {
            border: 2px solid darkseagreen;
        }

        .newrow .form-select {
            border: 2px solid darkseagreen;
        }



        .charegRow {
            background: #eff2f7;
        }

            .charegRow td {
                border: 0 !important;
            }

            .charegRow label {
                font-size: 14px !important;
                font-weight: bold !important;
            }

        .taxBlock .col-md-2, .taxBlock .col-md-3 {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
        }

        .align_self {
            margin-top: 31px;
        }

        .w-12 {
            width: 12%;
        }

        .taxBlock label {
            margin: 0;
        }

        #listContainer {
            padding: .50rem .50rem !important;
            border-radius: 2px;
        }
    </style>
<fieldset>
    @using (Html.BeginForm())
    {
        <div class="card">
            <div class="card-body">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)


                <input type="hidden" id="Id" name="Id" value="@Model.SupplierInvoiceID" />
                <div class="row">
                    <div class="col-md-8">
                        <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields!</div>
                    </div>
                    <div class="col-md-4 text-md-end mb-1">

                        <button type="submit" class="btn btn-success" id="btnsave">Update</button>

                        <a href='@Url.Action("Index", "PurchaseInvoice", new { id = 0 })' class="btn btn-secondary" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>

                        <div id="divothermenu" class="btn-group hide">
                            @*<button type="submit" class="btn btn-primary">Menu</button>*@
                            <span class="btn btn-primary"><i class="bx bx-cog bx-spin me-2"></i>Sub Menu</span>
                            <button type="button" class="btn btn-primary dropdown-toggle-split border_right" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="mdi mdi-chevron-down"></i>
                            </button>
                            <div class="dropdown-menu" id="divsubmenu">

                                <a class="dropdown-item" target="_blank" href="InvoicePrint?id=@Model.SupplierInvoiceID" title="Invoice Printing">Invoice Print</a>
                                <a class="dropdown-item" onclick="ShowPostingJournal(@Model.AcJOurnalID)">Journal</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <label class="col-form-label required"> Invoice No</label>
                        @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "form-control txttarget", @required = "true", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.InvoiceNo)
                    </div>
                    <div class="col-md-2">
                        <div class="mb-2">
                            <label class="col-form-label">Invoice Date</label>
                            <div class="docs-datepicker">
                                <div class="input-group">
                                    <input type="text" class="form-control docs-date" name="InvoiceDate" id="InvoiceDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@Model.InvoiceDate.ToShortDateString()"
                                           placeholder="Pick a date" autocomplete="off">
                                    <button type="button"
                                            class="btn btn-secondary docs-datepicker-trigger"
                                            disabled>
                                        <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                    </button>
                                </div>
                                <div class="docs-datepicker-container"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class=" required col-form-label">Supplier Type</label>
                        @Html.DropDownListFor(model => model.SupplierTypeId, new SelectList(@ViewBag.Suppliertype, "SupplierTypeID", "SupplierType1"), "Select", new { @class = "form-select" })
                    </div>

                    <div class="col-md-3">
                        <label class="col-form-label required ">Supplier</label>
                        @Html.HiddenFor(model => model.SupplierID)
                        @*@Html.DropDownListFor(model => model.CustomerId, new SelectList(@ViewBag.Customer, "CustomerID", "CustomerName"), "Select", new { @class = "form-control", @required = "true" })*@
                        @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-select", @required = "true" })
                        @Html.ValidationMessageFor(model => model.SupplierName)
                    </div>
                    <div class="col-md-1">
                        <label class="col-form-label">Ref. No.</label>
                        @Html.TextBoxFor(model => model.ReferenceNo, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2">
                        <label class="col-form-label">Remarks</label>
                        @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Details</h4>
                        <hr />
                    </div>

                    <!-- Product Type -->
                    <div class="col-md-1">
                        <div class="mb-2">
                            <label class="col-form-label required">Product Type</label>
                            <select class="form-select" id="ProductTypeID" name="currency">
                                <option value="">Select</option>
                                @foreach (var item in ViewBag.ProductType)
                                {
                                    <option value="@item.ProductTypeID">@item.ProductTypeName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="mb-2">
                            <label class="col-form-label required">Product/Item</label>
                            <input type="hidden" class="form-select" id="txtAcHead" name="txtAcHead" />
                            <input type="hidden" class="form-control" id="txtAcHeadId" name="txtAcHeadId" />
                            <input type="text" class="form-select" id="txtProductName" name="txtProductName" />
                            <input type="hidden" class="form-control" id="txtProductID" name="txtProductID" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="mb-2">
                            <label class="col-form-label required">Particulars</label>
                            <input type="text" class="form-control" id="Particulars" name="Particulars" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="mb-2">
                            <label class="col-form-label required">Unit</label>
                            <select class="form-select" id="UnitID" name="currency">
                                <option value="">Select</option>
                                @foreach (var item in ViewBag.Unit)
                                {
                                    <option value="@item.ItemUnitID">@item.ItemUnit1</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="mb-2">
                            <label class="col-form-label required">Qty</label>
                            <input type="text" class="form-control textright" id="Qty" name="Qty" onchange="calculatevalue1()" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="mb-2">
                            <label class="col-form-label required">Rate</label>
                            <input type="text" class="form-control textright" id="Rate" name="Rate" onchange="calculatevalue1()" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <label class="col-form-label required">Amount</label>
                        <input type="text" class="form-control text-right" readonly id="Amount" name="Amount" onchange="calculatevalue1()" />
                    </div>

                    <div class="col-md-1">
                        <label class="col-form-label">Tax %</label>
                        <input type="number" class="form-control" id="Taxpercent" name="Taxpercent" onchange="calculatevalue1()" />
                    </div>


                    <div class="col-md-1">
                        <label class="col-form-label required">Net Value</label>
                        <input type="text" class="form-control text-right" readonly id="NetValue" />
                    </div>


                    <div class="col-md-1">
                        <label class="col-form-label required">Projects</label>
                        @Html.DropDownList("ProjectID", new SelectList(ViewBag.Projects, "ProjectID", "ProjectName"), "Select", new
                        {
                            @class = "form-select",
                          
                            @id = "DDProject"
                        })
                    </div>


                    <div class="col-md-1 btn-res mt-2">
                        <button type="button" class="btn btn-success waves-effect waves-light filter btn_top" index="1" id="btnadd" style="padding: 2px 7px !important;">
                            <i class="bx bx-plus mt-1" style="font-size: 23px;"></i>
                        </button>
                    </div>

                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">

                        <table class="table table-bordered mb-0" id="datatable1" style="width:100%">
                            <thead class="table-light">

                                <tr>
                                    <th>Type</th>
                                    <th>Product</th>
                                    <th>Particulars</th>
                                    <th>Unit</th>
                                    <th>Qty</th>
                                    <th>Rate</th>
                                    <th>Value</th>
                                    <th>Tax(%)</th>
                                    <th>Net Value</th>
                                    <th>Project</th>
                                    <th>Action</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody class="input-table" id="detailsbody">
                                @*@{Html.RenderPartial("InvoiceList", Model);}*@
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="6" class="text-right font-weight-bold">
                                        <b>Total</b>
                                    </td>
                                    <td>
                                        <span id="spantotal" class="form-control text-primary text-right" style="width:120px;font-weight:bold"></span>
                                    </td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                </div>

            </div>
        </div>






    }
</fieldset>


<div class="modal fade" id="consignmentpopup" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius:5px">

            <div class="modal-header">
                <h4 class="modal-title"> AWB Reference</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>


            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-11 flex justify-content-between">
                            <h4 id="hAcHead" class="mt-3"></h4>
                            <h5 id="hTotal">Total</h5>
                        </div>
                        <div class="col-md-1">
                            <button class="btn btn-primary small_btn" onclick="autoallocation()" title="Auto Allocation" type="button" id="btnAllocate" style="margin-top:10px;"><i class="fa fa-tasks" aria-hidden="true"></i></button>
                        </div>

                    </div>
                    <div class="row">
                        <div class="flex justify-content-between">
                            <span id="elemError" class="errors"></span>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-11">
                            <label class="headinglabel"> AWB No. </label>
                            <input type="text" id="txtConsignmentNo" class="form-control" />
                            <input type="hidden" id="txtInScanID" class="form-control" />
                        </div>
                        <div class="col-md-1">

                            <button type="button" class="btn btn-success waves-effect waves-light filter btn_top" title="Add Consignments" id="btnaddConsignment" style="padding: 2px 7px !important;">
                                <i class="bx bx-plus mt-1" style="font-size: 23px;"></i>
                            </button>
                        </div>
                    </div>

                    <div class="popUpgrid modal-scrollable mt-4">
                        <table class="table table-bordered table-responsive" id="Consignmentdetails">
                            <thead>
                                <tr>
                                    <th>AWB No.</th>
                                    <th>Amount</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody id="consignmentdetailsbody">
                            </tbody>
                        </table>
                    </div>

                    <div class="row">

                        <input type="hidden" value="" id="hdnEditAcHeadId" />
                        <input type="hidden" value="" id="hdnEditRowIndex" />
                        <input type="hidden" value="" id="hdnEditAmount" />
                        <input type="hidden" value="" id="hdnItemCount" />

                    </div>
                </div>
            </div>
            <div class="modal-footer" style="padding-top: 5px">
                <button type="button" id="ConsignmentSave" class="btn btn-success">Save</button>
                <button type="button" id="ConsignmentClose" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="stockpopup" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius:5px">

            <div class="modal-header">
                <h4 class="modal-title"> Stock Reference</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-11 flex justify-content-between">
                            <h4 id="hAcHead1"></h4>
                            <h5 id="hTotal1">Total</h5>
                        </div>

                    </div>
                    <div class="row">
                        <div class="flex justify-content-between">
                            <span id="elemError" class="errors"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label class="headinglabel required ">Item Type</label>
                            <input type="hidden" id="hdnCurrentIndex" value="0" />
                            @Html.DropDownListFor(model => model.ItemTypeId1, new SelectList(ViewBag.ItemType, "ItemTypeId", "ItemTypeName"), "Select", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ItemTypeId1)
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel required ">Item Name</label>
                            <select class="form-control" id="ItemId">
                            </select>
                            @*@Html.DropDownList("ItemId", new SelectList(ViewBag.Item, "ItemId", "ItemName"), "Select", new { @class = "form-control" ,@id="ItemId" })*@
                            @*<input type="text" class="form-control" id="ItemName" />*@
                            @*<input type="hidden" class="form-control" id="ItemId" />*@
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label class="headinglabel">Qty</label>
                            <input type="text" id="txtItemQty" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="headinglabel">Reference No.</label>
                            <input type="text" id="txtBookNo" class="form-control" />
                        </div>
                    </div>
                    <div class="row" id="divawb2">
                        <div class="col-md-4">
                            <label class="headinglabel">AWB Count</label>
                            <input type="text" id="txtAWBCount" class="form-control" onchange="checkawbstartend1()" />
                        </div>
                        <div class="col-md-4">
                            <label class="headinglabel"> AWB Start No. </label>
                            <input type="text" id="txtAWBStart" class="form-control" onchange="checkawbstartend1()" />
                        </div>
                        <div class="col-md-4">
                            <label class="headinglabel"> AWB End No. </label>
                            <input type="text" id="txtAWBEnd" class="form-control" readonly />
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer mt-3">
                <button type="button" id="StockSave" class="btn btn-success" onclick="SaveStock()">Save</button>
                <button type="button" id="StockClose" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

    });
</script>