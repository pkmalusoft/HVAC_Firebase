@model HVAC.Models.UserRegistrationVM
@{
      
        ViewBag.pTitle = "User";
        ViewBag.pageTitle = "Manage User Profiles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<link href="/Content/Multiselect/bootstrap-multiselect.css" rel="stylesheet" />
<script src="/Content/Multiselect/bootstrap-multiselect.js"></script>*@
<script type="text/javascript">
        var employeenames= [];
    var customernames = [];
    var agentnames = [];

    function deleterow(index) {
        debugger;
        //var item = $('#hdnBranchID_' + i);
        //$(item).parent().parent().addClass('hide');
        //var obj = $(item).parent().parent().find('.hdndeleted');
        $('#tr_' + index).addClass('hide');
        $('#hdndeleted_' + index).val(true);
        //$(obj).val(true);

    }

    function getpassword() {
            $.ajax({
                type: "GET",
                url: "/UserRegistration/GetRandomPassword",
                datatype: "Json",
                success: function (response) {

                    $('#Password').val(response.data);
                    $('#txtpass').val(response.data);

                }
            });
    }

    $(document).ready(function () {


        $("#RoleID").focus();
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });
        $(":password").css({ "border-radius": "5px" });



        // $.ajax({
        //    type: "GET",
        //    url: "/UserRegistration/GetCustomerName",
        //    datatype: "Json",
        //    success: function (response) {

        //        customernames = response.data;

        //    }
        //  });

        //   $.ajax({
        //    type: "GET",
        //    url: "/EmployeeMaster/GetEmployeeName",
        //    datatype: "Json",
        //    success: function (response) {

        //        employeenames = response.data;

        //    }
        //   });

        //$.ajax({
        //    type: "GET",
        //    url: "/Agent/GetAgentName",
        //    datatype: "Json",
        //    success: function (response) {

        //        agentnames = response.data;

        //    }
        //  });
        //$.ajax({
        //    type: "Get",
        //    url: "/BranchMaster/GetBranches",
        //    datatype: "Json",
        //    success: function (response) {
        //        debugger;
        //        var data = response.data;
        //        $('#SelectedValues').empty();

        //        $.each(data, function (index, value) {

        //            var o_st = $("#BranchId").val().split(",");

        //            var flag = 0;
        //            for (var j = 0; j < o_st.length; j++) {
        //                debugger;
        //                if (o_st[j] == value.BranchID) {
        //                    flag = 1;
        //                    break;
        //                }

        //            }

        //            if (value.BranchID != $('#DefaultBranchId').val()) {
        //                if (flag == 1) {
        //                    $('#SelectedValues').append('<option value="' + value.BranchID + '" selected=true>' + value.BranchName + '</option>');
        //                }
        //                else {
        //                    $('#SelectedValues').append('<option value="' + value.BranchID + '">' + value.BranchName + '</option>');
        //                }
        //            }

        //        });



        //        //$('#SelectedValues').multiselect({
        //        //    nonSelectedText: 'Select',
        //        //    enableClickableOptGroups: true,
        //        //    enableCollapsibleOptGroups: true,
        //        //    enableFiltering: false,
        //        //    includeSelectAllOption: true,
        //        //    enableCaseInsensitiveFiltering: false,
        //        //    selectAllValue: 'multiselect-all'
        //        //});


        //    }
        //});

          $("#RoleID").change(function () {

            var roleid = $("#RoleID").val();
              console.log(roleid);
              if (roleid == 13) {
                  $('#lblusername').html('Customer Name');
                  $('#UserName').autocomplete({
                source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCustomerName", "UserRegistration")",
                    data: { term: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.UserName,
                                value: val.ID
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#UserName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#UserName').val(ui.item.label);

                return false;
            }
        });
                //$("#UserName").autocomplete({
                //    source: customernames
                //});
                //$('#lblusername').html('Customer Name');
            }
            else if (roleid == 14) {
                $("#UserName").autocomplete({
                    source: agentnames
                });
                  $('#lblusername').html('Agent Name');
                   $('#lblusername').html('Customer Name');
                  $('#UserName').autocomplete({
                source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetAgentName", "UserRegistration")",
                    data: { term: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.UserName,
                                value: val.ID
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#UserName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#UserName').val(ui.item.label);

                return false;
            }
        });
              }
                  else if (roleid == 23) {//Agent
                $("#UserName").autocomplete({
                    source: agentnames
                });
                  $('#lblusername').html('Co-Loader Name');                   
                  $('#UserName').autocomplete({
                source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCoLoaderName", "UserRegistration")",
                    data: { term: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.UserName,
                                value: val.ID
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#UserName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#UserName').val(ui.item.label);

                return false;
            }
        });
            }
            else {
                //   $("#UserName").autocomplete({
                //    source: employeenames
                //   });
                //$('#lblusername').html('Employee Name');

                    $('#UserName').autocomplete({
                source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetEmployeerName", "UserRegistration")",
                    data: { term: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.UserName,
                                value: val.ID
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#UserName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#UserName').val(ui.item.label);

                return false;
            }
        });
            }

          });
        $('#apassshow').click(function () {

            if ($('#apassshow').html() == 'Show') {

                if ($('#Password').val()!="")
                    $('#txtpass').val($('#Password').val());

                $('#Password').addClass('hide');
                $('#txtpass').removeClass('hide');
                $('#apassshow').html('Hide');
            }
            else {
             $('#Password').removeClass('hide');
                $('#txtpass').addClass('hide');
                  $('#apassshow').html('Show');
            }

        });

        $('#txtpass').change(function () {

            $('#Password').val($('#txtpass').val());

        })
        $('#ConfirmPassword').change(function () {
            debugger;
            if ($('#Password').val() != '' && $('#ConfirmPassword').val() != '' && $('#Password').val() != $('#ConfirmPassword').val()) {
                $.notify('Password Confirmation Failed!');
                $('#Password').val('');
                $('#ConfirmPassword').val('');
                $('#Password').focus();
                return;

            }

        });
        $('#Password').change(function () {
            debugger;
            if ($('#Password').val() != '' && $('#ConfirmPassword').val() != '' && $('#Password').val() != $('#ConfirmPassword').val()) {
                $.notify('Password Confirmation Failed!');
                $('#Password').val('');
                $('#ConfirmPassword').val('');
                $('#Password').focus();
                return;

            }

        });

        $('#UserName').change(function () {

            if ($('#UserName').val() != "" && $('#RoleID').val() != 0) {
                $.ajax({
                    type: "Post",
                    url: "/UserRegistration/GetUserEmail",
                    data: { username: $('#UserName').val(), roleid: $('#RoleID').val() },
                    datatype: "Json",
                    success: function (response) {


                        if (response.status == true) {
                            debugger;
                            console.log(response.data.length);
                            if (response.data.length > 30) {
                                alert('Enter Login Email maximum with 30 characters!')
                                $('#EmailId').val(response.data.substring(1, 30));
                                $('#UserReferenceId').val(response.refid);
                            }
                            else {
                                $('#EmailId').val(response.data);
                                $('#UserReferenceId').val(response.refid);
                            }
                        }
                        else {
                            $('#UserReferenceId').val(0);
                            $('#EmailId').val('');
                            $.notify(response.message, "warning");
                        }

                    }
                });
            }

        });
        $("#btnsave").click(function () {
            debugger;
            var uname = $("#UserName").val();
            var pass = $("#Password").val();
            var role = $("#RoleID option:selected").val();
            //var phone = $("#Phone").val();
            var email = $("#EmailId").val();
            var isactive = $("#IsActive option:selected").val();

            if (role == "") {
                $("#alert").show();
                $('#RoleID').focus();
                return false;
            }
            else if (uname == "") {
                $("#alert").show();
                return false;
            }
            else if ($('#UserReferenceId').val() == 0) {
                $("#alert").show();
                $('#UserName').focus();
                return false;
            }
            else if (pass == "" && $('#UserID').val() == 0) {
                $("#alert").show();
                $('#Password').focus();
                return false;
            }



            //else if (phone == "") {
            //    $("#alert").show();
            //    return false;
            //}
            else if (email == "") {
                $("#alert").show();
                return false;

            }
            else if (isactive == "") {
                $("#alert").show();
                return false;
            }
            else {
                $("#alert").hide();
                return true;
            }
                //$.ajax({
                //    type: "Get",
                //    url: "/EmployeeMaster/CheckUserEmailExist",
                //    datatype: "Json",
                //    data: { EmailId: $('#EmailId').val() },
                //    success: function (data) {
                //
                //        console.log(data);
                //        if (data == "true") {
                //            $("#validations").html("User Emailid already exists!");
                //            $("#validations").show();
                //            return false;
                //        }
                //        else {
                //            $("#validations").hide();
                //            return true;
                //            //                var valdata = $("#Myform").serialize();
                //            ////to get alert popup
                //            //alert(valdata);
                //            //$.ajax({
                //            //    url: "/CustomerMaster/Create",
                //            //    type: "POST",
                //            //    dataType: 'json',
                //            //    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                //            //    data: valdata
                //            //});
                //            //                $('#Myform').trigger('submit')
                //            //return true;
                //        }



                //    }
                //});
            //else {
            //    $("#alert").hide();
            //    return true;

        });

         $("#btnadd").click(function () {

            debugger;
            var str = "";
             var AdditionBranchId = $('#AdditionalBranchId').val(); //$("#acHeadId option:selected").val();

             if (AdditionBranchId == "" || AdditionBranchId == 0 || AdditionBranchId=='') {
                alert("Please Select Additional Branch!");
                 $('#AdditionalBranchId').focus();
                return;
            }
             var branchname = $('#AdditionalBranchId option:selected').text();
             var i = $('#listbody tr').length;
             var sno = i+1;
             $("#listbody").append('<tr id="tr_' + i + '"><td>' + sno + '</td><td><input type="hidden"  name = "Details[' + i + '].UserBranchID" id="hdnUserBranchID_' + i + '" value="0" />'  + branchname + '<input type = "hidden" name = "Details[' + i + '].IsDeleted" class="hdndeleted" /> <input id="hdnBranchID_' +  i + '" type="hidden" value=' + $('#AdditionalBranchId').val() + ' name="Details[' + i + '].BranchID">' +
                '<td><a href="javascript:void(0)" id="DeleteNewRow" onclick="deleterow(' + i + ')" ><i class="fa fa-times"></i></a></td></tr > ');


             $('#AdditionalBranchId').focus();
        });
        if (@ViewBag.EditMode == true) {

            setTimeout(function () {
                $('#RoleID').trigger('change');
                $('#RoleID').attr('disabled', 'disabled');
                $('#RoleID').attr('readonly', 'readonly');
                $('#UserName').attr('readonly', 'readonly');
                $('#EmailId').attr('readonly', 'readonly');
            }, 1000)
            $('#btnsave').val('Update');
        }
        else {
            $('#btnsave').val('Save');
            $('#RoleID').focus();
        }
    });
</script>

    @if (TempData["SuccessMSG"] != null)
    {
        <!-- <div class="alert alert-success alert-dismissable" role="alert" id="divMsgHeader" ng-show="SuccessAlert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
            <h4><i class="icon fa fa-check"></i>Alert!</h4>
            <div id="divFinalMsg">@TempData["SuccessMSG"]</div>
        </div> -->
    }
    @if (TempData["ErrorMsg"] != null)
    {
        <script type="text/javascript">
                 $(document).ready(function () {
                     //$.notify("@TempData["ErrorMsg"]", "error");
                      });
        </script>
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div id="alert" style="color:red;display:none;margin-left:10px;">*Please fill mandatory fields</div>
        <fieldset>
            <div class="row no-margin">
                <div class="col-md-6">
                <div class="card">
                <div class="card-body">
                    <div class="row no-margin" style="padding-top:17px">
                        <div class="col-md-12" style="text-align:right">
                            <input type="submit" value="Save" class="btn btn-success btnwidth" id="btnsave" />

                            <a href='@Url.Action("Index", "UserRegistration", new { id = 0 })' class="btn btn-secondary" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>
                        </div>
                    </div>
                    <div class="row no-margin" style="padding-top:10px;">

                        <div class="col-md-4">
                        <div class="mb-2">
                            @Html.HiddenFor(model => model.UserReferenceId)
                            @Html.HiddenFor(model => model.DefaultBranchId)
                            @Html.HiddenFor(model => model.BranchId)
                            @Html.HiddenFor(model => model.UserID)
                            <label class="required col-form-label">Role</label>
                            @Html.DropDownListFor(model => model.RoleID, new SelectList(ViewBag.UserRole, "RoleID", "RoleName"), "Select Role", new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.RoleID)
                        </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-2">
                                <label class="required col-form-label" id="lblusername">User Name</label>
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @autocomplete = "off", @type = "search", @maxlength = "50" })
                                @Html.ValidationMessageFor(model => model.UserName)
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-2">
                                <label class="required col-form-label">Email</label>
                                @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", @autocomplete = "off", @type = "search",@maxlength="30" })
                                @Html.ValidationMessageFor(model => model.EmailId)
                            </div>
                        </div>
                    
                        <div class="col-md-6">
                            <div class="flexTitle">
                                <label class="required col-form-label">New Password </label>
                                <div class="no-padding  text-right" style="float:right">
                                    <label class="required col-form-label"> <a id="apassshow">Show</a> </label>
                                </div>
                            </div>                            
                            <input type="text" id="txtpass" value="@Model.Password" class="form-control hide" />
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                        @*<div class="col-md-6" style="padding-top:40px">
                            <a href="javascript:void(0);" onclick="getpassword();" id="btngenerate">Generate Password</a>
                        </div>*@
                        <div class="col-md-6">
                            <label class="required col-form-label">Confirm Password  </label>
                            <input type="text" id="txtpass" value="@Model.Password" class="form-control hide" />
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </div>

                    </div>
                    <hr />
                    <div class="row no-margin">
                        <div class="col-md-5">
                            <label class="col-form-label required ">Default Branch</label>
                            @*@Html.TextBoxFor(model => model.DefaultBranchName, new { @class = "form-control", @readonly = "readonly", @type = "search" })*@
                            @Html.DropDownListFor(model => model.DefaultBranchId, new SelectList(ViewBag.DefaultBranch, "BranchID", "BranchName"), "Select Branch", new { @class = "form-select" })
                        </div>
                        <div class="col-md-5">
                            <label class="col-form-label required ">Add Branch</label>
                            @*@Html.TextBoxFor(model => model.DefaultBranchName, new { @class = "form-control", @readonly = "readonly", @type = "search" })*@
                            @Html.DropDownListFor(model => model.AdditionalBranchId, new SelectList(ViewBag.Branch, "BranchID", "BranchName"), "Select Branch", new { @class = "form-select" })
                        </div>
                        <div class="col-md-2 text-md-end mt-2">
                            <button type="button" class="btn btn-success waves-effect waves-light filter btn_top" id="btnadd">
                                <i class="bx bx-plus mt-1" style="font-size: 21px;"></i>
                            </button>
                        </div>
                        @*<div class="col-md-6">
            <label class="headinglabel required ">Additional Branches</label>
            <select id="SelectedValues" name="SelectedValues" multiple="multiple" class="form-control">
                <option value=""></option>
            </select>
        </div>*@
                    </div>
                    @*<div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-4 checkboxdesign" style="padding-top:20px">

                            @Html.CheckBox("EmailNotify", new { @name = "EmailSend" }) &nbsp <label class="headinglabel">Send Notification to user by Email</label>
                            @Html.ValidationMessageFor(model => model.EmailNotify)

                        </div>
                    </div>
                    <div class="row no-margin" style="padding-top:10px">
                        <div class="col-md-6 checkboxdesign">

                            @Html.CheckBox("IsActive", new { @name = "StatusActive" }) &nbsp <label class="headinglabel">Is Active</label>
                            @Html.ValidationMessageFor(model => model.IsActive)

                        </div>

                    </div>*@
                </div>
                </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                           
                                    @{Html.RenderPartial("UserBranchList", Model);}
                               
                        </div>
                    </div>
                </div>
            </div>

</fieldset>
    }

</section>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
