@model  HVAC.Models.SupplierMaster

@{
    ViewBag.Title = "Create";
    //ViewBag.pTitle = "Supplier";
    ViewBag.pageTitle = "Account Payable";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /*.formDesign .col-md-4{
        padding-bottom:10px;
        }*/
    .jobform {
        background-color: #fff;
        box-shadow: 0 9px 23px rgba(0, 0, 0, 0.09), 0 5px 5px rgba(0, 0, 0, 0.06) !important;
        border-radius: 25px;
        margin-bottom: 27px;
        /*padding: 20px;
        width: 100%;
        margin: 0 auto;
        max-width: 853px;*/
        padding-top: 14px;
        padding-left: 8px;
        padding-right: 8px;
        width: 96%;
    }

    .multiselect {
        width: 100% !important;
    }
</style>
 

<script>
    function getcountryphonecode(countrycode) {
        $.getJSON("/countrycode.json", function (data) {
            var items = [];
            $.each(data, function (key, item) {
                if (item.code == countrycode) {
                    debugger;
                    $('#Mobile').val(item.dial_code.replace('+', ''));
                    $('#CountryCode').val(item.dial_code.replace('+', ''));
                    $('#lblcountrycode').html($('#CountryCode').val());
                }
                // items.push("<li id='" + key + "'>" + val + "</li>");
            });
        });
    }
    $(document).ready(function () {

       $('#CountryName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCountryList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CountryName,
                                value: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CountryName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#CountryName').val(ui.item.label);

                return false;
            }
        });
        $('#CityName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCityList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.City,
                                value: val.City,
                                Country: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });


       $('#LocationName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetLocationList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Location,
                                value: val.Location,
                                City: val.CityName,
                                Country: val.CountryName
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            select: function (e, ui) {
                e.preventDefault();
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });
  
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#SupplierName").focus();
     

        $("#SupplierName").change(function () {

            $.ajax({
                type: "POST",
                url: "/Supplier/GetSupplierCode",
                datatype: "Json",
                data: { suppliername: $("#SupplierName").val() },
                success: function (result) {
                    debugger;

                    $('#ReferenceCode').val(result.data)
                    // BindCity(data.CityID, data.LocationID);
                }
            });

        });



       

        //$("#btnsave").click(function () {
        //    debugger;
        //    var sup = $("#SupplierName").val();
        //    var ref = $("#ReferenceCode").val();
        //    var con = $("#ContactPerson").val();
        //    var add = $("#Address1").val();
        //    var phone = $("#Phone").val();
        //    var ExpCode = $("#ExportCode").val();
        //    var maxcreditdays = $('#MaxCreditDays').val();
        //    var regex = /^[0-9 ]+$/
        //    var isValid = regex.test(ExpCode);

        //    var email = $("#Email").val();


        //    if (sup == "") {
        //        $("#alert").show();
        //        return false;
        //    }
        //    else if (con == "") {
        //        $("#alert").show();
        //        return false;
        //    }
        //    else if ($('#LocationName').val() == "")
        //    {
        //        $("#alert").show();
        //        return false;
        //    }
        //    else if ($('#CityName').val() == "") {
        //        $("#alert").show();
        //        return false;
        //    }
        //    else if ($('#CountryName').val() == "") {
        //        $("#alert").show();
        //        return false;
        //    }
        //    else if (phone == "") {

        //        $("#alert").show();
        //        return false;
        //    }
        //    else if (email == "") {

        //        $("#alert").show();
        //        return false;
        //    }
        //    //else if (maxcreditdays == "" || maxcreditdays == "0")
        //    //{
        //    //    $("#alert").show();
        //    //    return false;

        //    //}
        //    else if (ref == "") {
        //        $("#alert").show();
        //        return false;
        //    }

        //    else if ($('#ExportCode').val()!="" && !isValid) {
        //        alert("Exporter Code must be a Number.");
        //        return false;
        //    }
        //    else {
        //        $("#alert").hide();
        //        return true;
        //    }


        //});
           $("#SupplierName").focusout(function () {
            var customerval = $("#SupplierName").val();
            if (customerval == "" || customerval == null) {

            } else {
                var custstrarray = customerval.split(' ');
                if (custstrarray.length > 1) {

                    var refString = custstrarray[0].charAt(0) + custstrarray[1].charAt(0) + "-" + '@ViewBag.custnum';
                    $("#ReferenceCode").val(refString);

                } else {

                    var refString = customerval.charAt(0) + customerval.charAt(1) + "-" + '@ViewBag.custnum';
                    $("#ReferenceCode").val(refString);
                }
            }
        });
    });
</script>


@if (ViewBag.SuccessMsg != null)
{
    <script type="text/javascript">
          $(document).ready(function () {
              $.notify("@ViewBag.SuccessMsg", "success");
          });
    </script>
}

@using (Html.BeginForm("Create", "Supplier", FormMethod.Post, new { @class = "needs-validation ", @novalidate = "novalidate", @id = "quickAWB" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="alert" style="color:red;display:none;margin-left:10px;">*Please fill mandatory fields</div>

    <fieldset>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8"></div>
                    <div class="col-md-4 text-md-end">
                        <input type="submit" value="Save" class="btn btn-success" id="btnsave" />&nbsp;
                        <a href='@Url.Action("Index", "Supplier", new { id = 0 })' class="btn btn-secondary">Cancel</a>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Code</label>

                            @Html.TextBoxFor(model => model.ReferenceCode, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ReferenceCode)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Name</label>

                            @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-control txttarget",@required="required" })
                            @Html.ValidationMessageFor(model => model.SupplierName)
                        </div>
                    </div>


                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">PO.Box No</label>
                            @Html.TextBoxFor(model => model.POBoxNo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.POBoxNo)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class=" col-form-label">Fax ID</label>

                            @Html.TextBoxFor(model => model.Fax, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Fax)
                        </div>
                    </div>


                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Contact Person</label>

                            @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.ContactPerson)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Address 1 (Building)</label>
                            @Html.TextBoxFor(model => model.Address1, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.Address1)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Address 2 (Street)</label>

                            @Html.TextBoxFor(model => model.Address2, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.Address2)
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Location</label>
                            @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control"  })
                            @Html.ValidationMessageFor(model => model.LocationName)

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">City</label>
                            @Html.TextBoxFor(model => model.CityName, new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.CityName)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Country</label>
                            @Html.TextBoxFor(model => model.CountryName, new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.CountryName)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Tele Phone -1</label>

                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Mobile No.</label>

                            @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.MobileNo)
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Email</label>

                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">WebSite</label>

                            @Html.TextBoxFor(model => model.WebSite, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.WebSite)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Max Credit Days</label>

                            @Html.TextBoxFor(model => model.MaxCreditDays, new { @class = "form-control textright" })
                            @Html.ValidationMessageFor(model => model.MaxCreditDays)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class=" col-form-label">Max Credit Limit</label>
                        @Html.TextBoxFor(model => model.MaxCreditLimit, new { @class = "form-control textright" })
                        @Html.ValidationMessageFor(model => model.MaxCreditLimit)
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="required col-form-label">Supplier Type</label>
                            @Html.DropDownListFor(model => model.SupplierTypeID, new SelectList(ViewBag.SupplierType, "SupplierTypeID", "SupplierType1"), new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.SupplierTypeID)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label" id="lblaccount">Chart of Account -Credit </label>

                            @Html.DropDownListFor(model => model.AcHeadID, new SelectList(@ViewBag.achead, "AcHeadID", "AcHead1"), "Select", new { @class = "form-select", @required = "true" })
                            @Html.ValidationMessageFor(model => model.AcHeadID)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-2">
                                    <label class="col-form-label">Exporter Code</label>
                                    @Html.TextBoxFor(model => model.ExportCode, new { @class = "form-control textright0" })
                                    @Html.ValidationMessageFor(model => model.ExportCode)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-2">
                                    <label class="required col-form-label">TRN No.</label>
                                    @Html.TextBoxFor(model => model.RegistrationNo, new { @class = "form-control txttarget" })
                                    @Html.ValidationMessageFor(model => model.RegistrationNo)

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 btn_top">
                        <div class="mb-2 mt-2">
                            @Html.CheckBox("StatusActive", new { @name = "StatusActive" }) &nbsp <label class="headinglabel">Status Active</label>
                            @Html.ValidationMessageFor(model => model.StatusActive)
                        </div>
                    </div>

                </div>
                @*<div class="row no-margin" style="padding-top:10px">

                        <div class="col-md-4">
                            <label class="headinglabel">Remark</label>
                            @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.Remarks)

                        </div>

                        <div class="col-md-4">
                            <label class="headinglabel">Revenue Type Ids</label><h6></h6>
                            @Html.DropDownList("RevenueItems", new SelectList(ViewBag.revenue, "RevenueTypeID", "RevenueType1"), new { @class = "multiselect form-control", multiple = "multiple", @style = "padding-top:10px" })
                            @Html.HiddenFor(model => model.RevenueTypeIds)


                        </div>

                    </div>*@


            </div>
        </div>

    </fieldset>

}

