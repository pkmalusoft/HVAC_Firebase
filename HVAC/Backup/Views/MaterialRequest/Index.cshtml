@model HVAC.Models.MaterialRequestSearch

@{
    ViewBag.Title = "List";
    ViewBag.pTitle = "Material Request";
    ViewBag.pageTitle = "HVAC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">

    $(document).ready(function () {
        $('#dataTables-example tfoot th').each(function () {
            var title = $(this).text();
            $(this).html('<input type="text" style="width:100%" />');
        });


        var table = $('#dataTables-example').DataTable();

        table.columns().every(function () {
            var that = this;

            $('input', this.footer()).on('keyup change', function () {
                if (that.search() !== this.value) {
                    that
                        .search(this.value)
                        .draw();
                }
            });
        });

    });


</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-body">
            <div class="row">


                <div class="col-md-2">
                    <label for="FromDate" class="col-form-label">From Date</label>
                    @*@Html.TextBoxFor(mode => mode.FromDate, new { @class = "form-control text-right color_blue_border" })*@
                    <div class="docs-datepicker">
                        <div class="input-group">
                            <input type="text" class="form-control form-control-sm docs-date" name="FromDate" id="FromDate1"
                                   placeholder="Pick a From Date" autocomplete="off" value="@Model.FromDate.ToShortDateString()" tabindex="1" />
                            <button type="button"
                                    class="btn btn-secondary docs-datepicker-trigger"
                                    disabled>
                                <i class="mdi mdi-calendar" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div class="docs-datepicker-container"></div>
                    </div>
                </div>

                <div class="col-md-2">
                    <label for="ToDate" class="col-form-label">To Date</label>
                    @*@Html.TextBoxFor(mode => mode.ToDate, new { @class = "form-control text-right color_blue_border" })*@
                    <div class="docs-datepicker">
                        <div class="input-group">
                            <input type="text" class="form-control form-control-sm docs-date" name="ToDate" id="ToDate1" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker"
                                   placeholder="Pick a To date" autocomplete="off" value="@Model.ToDate.ToShortDateString()" tabindex="2">
                            <button type="button"
                                    class="btn btn-secondary docs-datepicker-trigger"
                                    disabled>
                                <i class="mdi mdi-calendar" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div class="docs-datepicker-container"></div>
                    </div>
                </div>
                <div class=" col-md-2">
                    <div class="mb-2">
                        <label for="Receipt No." class="col-form-label">Project No.</label>
                        @Html.TextBoxFor(model => model.ProjectNo, new { @class = "form-control", @tabindex = "3" })
                    </div>
                </div>

                <div class=" col-md-2">
                    <div class="mb-2">
                        <label for="Receipt No." class="col-form-label">MR No.</label>
                        @Html.TextBoxFor(model => model.MRNo, new { @class = "form-control", @tabindex = "4" })
                    </div>
                </div>




                <div class="col-md-1">
                    <div class="mb-2">
                        <button type="submit" class="btn btn-sm btn-success" style="margin-top:35px" tabindex="5">
                            <i class="mdi mdi-refresh" style="font-size: 18px;"></i>
                        </button>
                    </div>
                </div>

                <div class="col-md-3 text-md-end">

                    <a class="btn btn-primary waves-effect waves-light text-md-end btn_top" href="/MaterialRequest/Create"><i class="mdi mdi-plus me-1"></i> New Material Request</a>
                </div>
            </div>
        </div>
    </div>







    <div class="card">
        <div class="card-body">

            <table class="align-middle table-nowrap dt-responsive nowrap w-100 table-check dataTable no-footer dtr-inline mt-4 border-top table table-hover" id="datatable" style="width:100%">
                <thead class="table-light">
                    <tr>
                        <th>
                            MR Date

                        </th>
                        <th>MR No.</th>
                        <th>
                            Project no.
                        </th>
                        <th>
                            Requested By
                        </th>
                        <th>
                            Store Keeper
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>


                <tbody>
                    @if (Model.Details != null)
                    {
                        foreach (var item in Model.Details)
                        {
                    <tr>
                        <td>
                            @HVAC.Models.CommonFunctions.GetShortDateFormat(item.MRDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MRNo)
                        </td>
                        
                        <td>
                            @Html.DisplayFor(modelItem => item.ProjectNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequestedByName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StoreKeeperName)
                        </td>
                        <td>
                            <div class="d-flex gap-3">
                                <a href="@Url.Action("Create", new { id = item.MRequestID })" class="text-success" title="Edit PO"><i class="mdi mdi-pencil font-size-18"></i></a>
                                
                                <a href="#" onclick="Delete(ID =@item.MRequestID)" class="text-danger" title="Delete PO"><i class="mdi mdi-delete font-size-18"></i></a>

                                @*<a href="#" onclick="POPrint(ID =@item.MRequestID)" class="text-warning" title="Print Quotation"><i class="mdi mdi-printer font-size-18"></i></a>*@
                            </div>
                        </td>
                    </tr>
                        }
                    }
                </tbody>

            </table>
        </div>
    </div>
}


@section scripts{
<script type="text/javascript">


    function Delete(ID) {
        Swal.fire({ title: "Are you sure?", text: "Do you want to delete this?", icon: "warning", showCancelButton: !0, confirmButtonColor: "#34c38f", cancelButtonColor: "#f46a6a", confirmButtonText: "Yes, delete it!" }).then(
            function (t) {
                if (t.value) {
                    $.ajax({
                        type: "POST",
                        url: '/MaterialRequest/DeleteConfirmed',
                        datatype: "html",
                        data: {
                            'id': ID
                        },
                        success: function (response) {
                            if (response.status == "OK") {
                                Swal.fire("Delete Status!", response.message, "success");
                                window.location.reload();
                            }
                            else {
                                Swal.fire("Delete Status!", response.message, "error");
                            }
                        }
                    });
                }
            });

    }
</script>
    }