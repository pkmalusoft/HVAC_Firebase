@model HVAC.Models.CompanyVM

@{
    ViewBag.Title = "Create";
    ViewBag.pTitle = "Company";
    ViewBag.pageTitle = "Company";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .editLogo {
        background: #fff;
        border-radius: 50%;
        width: 35px;
        margin: auto;
        height: 35px;
        line-height: 35px;
        color: #ffffff;
        background: #35b8eb;
        font-size: 20px;
        border: 2px solid #ffffff;
        text-align: center;
        right: 0;
        left: 0;
        pointer-events: none;
        position: absolute;
        cursor: pointer;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {

        $(":text").css("border-radius", "5px");
        $("select").css("border-radius", "5px");
        $(".awbno").hide();

        $("#AcCompany").focus();

     

      
      

        $("#IsAWBAutoGenerated").click(function () {
            if ($("#IsAWBAutoGenerated").is(':checked')) {
                $(".awbno").show();
            }
            else {
                $(".awbno").hide();
            }
        });

    
        
        $('#CountryName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCountryList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CountryName,
                                value: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CountryName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#CountryName').val(ui.item.label);

                return false;
            }
        });
        $('#CityName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCityList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.City,
                                value: val.City,
                                Country: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });


        $('#LocationName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetLocationList", "ZoneChart")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Location,
                                value: val.Location,
                                City: val.CityName,
                                Country: val.CountryName
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            select: function (e, ui) {
                e.preventDefault();
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });
   

        $("#btnsave").click(function () {
            var accom = $("#AcCompany").val();
            var add1 = $("#Address1").val();
            var cou = $("#CountryName").val(); // $("#CountryID option:selected").val();
            var city = $("#CityName").val(); // $("#CityID option:selected").val();
            var des = $("#DesignationID option:selected").val();
            var key = $("#KeyPerson").val();
            var phone = $("#Phone").val();
            var mob = $("#Mobile1").val();
            var em = $("#EMail").val();
            var copr = $("#CompanyPrefix").val();
            var curr = $("#CurrencyID option:selected").val();




            if (accom == "") {
                $("#validations").show();
                return false;
            }
            else if (add1 == "") {
                $("#validations").show();
                return false;
            }
            else if (cou == "") {
                $("#validations").show();
                return false;
            }
            else if (des == "") {
                $("#validations").show();
                return false;
            }
            else if (key == "") {
                $("#validations").show();
                return false;
            }
            else if (phone == "") {
                $("#validations").show();
                return false;
            }
            else if (mob == "") {
                $("#validations").show();
                return false;
            }
            else if (em == "") {
                $("#validations").show();
                return false;
            }
            else if (copr == "") {
                $("#validations").show();
                return false;
            }
            else if (curr == "") {
                $("#validations").show();
                return false;
            }
            else {
                $("#validations").hide();
                return true;
            }
        });
    });
</script>




    @using (@Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
        <fieldset>
<div class="card">
<div class="card-body">
            <div class="row">

                <div class="col-md-3">
                <div class="mb-2">
                    @Html.HiddenFor(model => model.LogoFileName)
                    <label class="col-from-label required">Company</label>
                    @Html.TextBoxFor(model => model.AcCompany, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.AcCompany)
                </div>
                </div>

                <div class="col-md-3">
                 <div class="mb-2">
                    <label class="col-from-label required">Address1</label>
                    @Html.TextBoxFor(model => model.Address1, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address1)

                </div>
                </div>

                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label">Address2</label>
                    @Html.TextBoxFor(model => model.Address2, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address2)

                </div>
                </div>
                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label">Address3</label>
                    @Html.TextBoxFor(model => model.Address3, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.Address3)

                </div>
                </div>
           
                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">Location</label>
                    <input class="form-control" name="LocationName" id="LocationName"  type="search" />
                    @*@Html.DropDownListFor(model => model.LocationID, new SelectList(@ViewBag.Location, "LocationID", "Location"), "Select", new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.LocationName)
                </div>
                </div>
                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">City</label>
                    <input class="form-control" id="CityName" name="CityName" type="search" autocomplete="off"  />
                    @*@Html.DropDownListFor(model => model.CityID, new SelectList(@ViewBag.city, "CityID", "City"), "Select", new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.CityName)
                </div>
                </div>
                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">Country</label>
                    <input class="form-control" id="CountryName" name="CountryName" type="text" autocomplete="off"   />
                    @*@Html.DropDownListFor(model => model.CountryID, new SelectList(@ViewBag.country, "CountryID", "CountryName"), "Select", new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.CountryName)

                </div>
                </div>



                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">Designation</label>
                    @Html.DropDownListFor(model => model.DesignationID, new SelectList(@ViewBag.Designations, "DesignationID", "Designation1"), "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.DesignationID)

                </div>
                </div>



                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">Contact Person</label>
                    @Html.TextBoxFor(model => model.KeyPerson, new { @class = "form-control txttarget" })
                    @Html.ValidationMessageFor(model => model.KeyPerson)

                </div>
                </div>
                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">Phone No</label>
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.Phone)

                </div>
                </div>

                @* <div class="col-md-3">
                        <label class="headinglabel">Phone No 1</label>
                        @Html.TextBoxFor(model => model.PhoneNo1, new { @class = "form-control textright" })
                        @Html.ValidationMessageFor(model => model.PhoneNo1)

                    </div>
                    <div class="col-md-3">
                        <label class="headinglabel">Phone No 2</label>
                        @Html.TextBoxFor(model => model.PhoneNo2, new { @class = "form-control textright" })
                        @Html.ValidationMessageFor(model => model.PhoneNo2)

                    </div>*@

                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label">Fax No</label>
                    @Html.TextBoxFor(model => model.PhoneNo4, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.PhoneNo4)

                </div>
                </div>

                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-from-label required">Mobile No 1</label>
                    @Html.TextBoxFor(model => model.Mobile1, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.Mobile1)

                </div>
                </div>

            
                @*  <div class="col-md-3">
                        <label class="headinglabel">Phone No 3</label>
                        @Html.TextBoxFor(model => model.PhoneNo3, new { @class = "form-control textright" })
                        @Html.ValidationMessageFor(model => model.PhoneNo3)

                    </div>*@



                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-form-label">Mobile No 2</label>
                    @Html.TextBoxFor(model => model.Mobile2, new { @class = "form-control textright" })
                    @Html.ValidationMessageFor(model => model.Mobile2)

                </div>
                </div>

                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-form-label required">Email</label>
                    @Html.TextBoxFor(model => model.EMail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMail)

                </div>
                </div>

                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-form-label">Website</label>
                    @Html.TextBoxFor(model => model.website, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.website)

                </div>
                </div>

                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-form-label required">Company Prefix</label>
                    @Html.TextBoxFor(model => model.CompanyPrefix, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CompanyPrefix)

                </div>
                </div>


          
                <input type="file" id="FileUpload1" style="display:none" />
                <input type="button" id="btnUpload" value="Upload Files" style="display:none" />
                <div class="col-md-3">
                <div class="mb-2">
                    <label class="col-form-label required">Default Currency</label>
                    @Html.DropDownListFor(model => model.CurrencyID, new SelectList(@ViewBag.Currency, "CurrencyID", "CurrencyName"), "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.CurrencyID)

                </div>
                 </div>
                <div class="col-md-2">
                    <div class="mb-2">
                        <label class="col-form-label">Logo</label>
                        <div class="logo">
                            <img src='@Model.LogoFilPath' width="100" height="100" id="imglogo" title="Click Image to Edit Logo" />
                            <i class="fa fa-pencil editLogo"></i>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 checkboxdesign btn_top">
                <div class="mb-2 mt-2">
                    @Html.CheckBox("IsAWBAutoGenerated", new { @name = "IsAWBAutoGenerated" }) &nbsp
                    <label class="col-form-label">Auto Generate AirWayBill</label>
                    @Html.ValidationMessageFor(model => model.IsAWBAutoGenerated)
                </div>
                </div>

                @*<div class="col-md-3 awbno">
                    <label class="headinglabel">Starting AWB Number</label>
                    @Html.TextBoxFor(model => model.AWBFormat, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AWBFormat)

                </div>*@

                @*<div class="row no-margin" style="padding-top: 10px">
            <div class="col-md-3 checkboxdesign" style="padding-top:15px">
                @Html.CheckBox("IsAWBAutoGenerated", new { @name = "IsAWBAutoGenerated" }) &nbsp
                <label class="headinglabel">Auto Generate AirWayBill</label>
                @Html.ValidationMessageFor(model => model.IsAWBAutoGenerated)
            </div>

            <div class="col-md-3 awbno">
                <label class="headinglabel">Starting AWB Number</label>
                @Html.TextBoxFor(model => model.AWBFormat, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AWBFormat)

            </div>
            <div class="col-md-3 awbno">
                <label class="headinglabel">Invoice Prefix</label>
                @Html.TextBoxFor(model => model.InvoicePrefix, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InvoicePrefix)

            </div>
            <div class="col-md-3 awbno">
                <label class="headinglabel">Invoice Format</label>
                @Html.TextBoxFor(model => model.InvoiceFormat, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InvoiceFormat)

            </div>



        </div>*@

                    <div class="col-md-12 text-md-end">

                        <input type="submit" value="Save" class="btn btn-success" id="btnsave" />
                        &nbsp;<a href='@Url.Action("Index", "CompanyMaster", new { id = 0 })' class="btn btn-secondary" data-toggle="tooltip" data-placement="right" title=" ">Cancel</a>


                    </div>
                </div> </div> </div> 
</fieldset>
    }
    @*<div class="row no-margin">
        @{ Html.RenderAction("CompanyLogo", "CompanyMaster");}
    </div>*@

<script>
    $(document).ready(function () {
        $('#imglogo').click(function () {

            $("#FileUpload1").trigger('click');

        });

        $("#FileUpload1").change(function () {
            $('#btnUpload').trigger('click');            
        });

        $('#btnUpload').click(function () {

            // Checking whether FormData is available in browser
            if (window.FormData !== undefined) {

                var fileUpload = $("#FileUpload1").get(0);
                var files = fileUpload.files;

                // Create FormData object
                var fileData = new FormData();

                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }

                // Adding one more key to FormData object
                fileData.append('username', "Manas");

                // Add anti-forgery token to FormData
                fileData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
                
                $.ajax({
                    url: '/CompanyMaster/UploadFiles',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {
                        if (result.status == "ok") {
                            $('#imglogo').attr('src', "/UploadFiles/" + result.FileName);
                            $('#LogoFileName').val(result.FileName);
                        }
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });
            } else {
                alert("FormData is not supported.");
            }
        });
    });
</script>

