@model HVAC.Models.ProductTypeVM

@{
    ViewBag.Title = "Edit";
     ViewBag.pTitle = "Product & Service Type";
    ViewBag.pageTitle = "Product & Service Type";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .loginbox
    {
        background-color:white;
       border-style: solid;
    border-color: black;
    border-radius:10px;
    }
    #Length
    {
        color:black;
          border-style: solid;
    border-color: black;
    }
     #Width
    {
        color:black;
          border-style: solid;
    border-color: black;
    }
       #Height
    {
        color:black;
          border-style: solid;
    border-color: black;
    }
         #CBM
    {
        color:black;
          border-style: solid;
    border-color: black;
    }

</style>
 <script type="text/javascript">
     $(document).ready(function () {
         $(":text").css({ "border-radius": "5px" });
         $("select").css({ "border-radius": "5px" });

         $("#ProductName").focus();

         $("#btnsave").click(function () {
             var cou = $("#ProductName").val();
          
             var id = $("#ParcelType option:selected").val();
             var inscan = $("#transport option:selected").val();
             if (cou == "") {
                 $("#validations").show();
                 return false;
             }
            
             else if (id == "") {
                 $("#validations").show();
                 return false;
             }
             else if (inscan == "") {
                 $("#validations").show();
                 return false;
             }


             else {
                 $("#validations").hide();
                 return true;
             }
         });




     });
</script>
<script type="text/javascript">
    $(document).ready(function () {
      




        $("#Length").blur(function () {
            cal();
        });
        $("#Width").blur(function () {
            cal();
        });
        $("#Height").blur(function () {
            cal();
        });
        function cal() {
            var l = parseFloat($("#Length").val());
            var w = parseFloat($("#Width").val());
            var h = parseFloat($("#Height").val());

            var CBM = l * w * h;
            $("#CBM").val(parseFloat(CBM).toFixed(2));


        }
    });
       </script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
      <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
    <fieldset>
        <div class="card">
    <div class="card-body">
       <div class="row"> 
        <div class="col-md-3">
            <div class="mb-2">
                @Html.HiddenFor(model=>model.ProductTypeID)
                <label class="col-form-label required">Product Name</label>
                @Html.TextBoxFor(model => model.ProductName,new { @class = "form-control txttarget" })
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>
        <div class="col-md-3">
        <div class="mb-2">
            <label class="col-form-label required">Parcel Type</label>
            @Html.DropDownListFor(model => model.ParcelTypeID, new SelectList(@ViewBag.ParcelType, "ID","ParcelType1"), "Select", new { @class = "form-select" })
        </div>
        </div>

        <div class="col-md-3">
        <div class="mb-2">
            <label class="col-form-label required">Courier Type</label>
            @Html.DropDownListFor(model => model.TransportModeID, new SelectList(@ViewBag.transport, "MovementID","MovementType"), "Select", new { @class = "form-select" })
        </div> 
        </div>

        <div class="col-md-3 checkboxdesign btn_top">
        <div class="mb-2 mt-2">
            <label class="col-form-label required">CBM based Charges</label>
            <label class="col-form-label">   @Html.CheckBoxFor(model=>model.CBMbasedCharges)</label>
        </div>
        </div>

    </div>
          
    <div class="col-md-12 mt-4">
        <h4>  Package Dimensions </h4>
        <hr>
        <div class="row">
            <div class="col-md-3">
                <label>Length</label>
                 @Html.TextBoxFor(model => model.Length,new { @class = "form-control text-right" })
                @Html.ValidationMessageFor(model => model.Length)
            </div>
             
            <div class="col-md-3">
                <label>Width</label>
                 @Html.TextBoxFor(model => model.Width,new { @class = "form-control text-right" })
                @Html.ValidationMessageFor(model => model.Width)
            </div>
            <div class="col-md-3">
                <label >Height</label>
               @Html.TextBoxFor(model=>model.Height,new{@class="form-control text-right"})
                @Html.ValidationMessageFor(model=>model.Height)
            </div>
                          
            <div class="col-md-3">
                <label>Cubic Meter</label>
               @Html.TextBoxFor(model=>model.CBM,new{@class="form-control text-right"})
                @Html.ValidationMessageFor(model=>model.CBM)
            </div> 
        </div>
    </div>

    <div class="col-md-12 text-md-end btn_top">
        <input type="submit" value="Save" class="btn btn-success" id="btnsave" />
        <a href='@Url.Action("Index", "ProductType", new { id = 0 })' class="btn btn-secondary" data-toggle="tooltip" data-placement="right" title="">Cancel</a>         
    </div>
    </div>  
</div>
    </fieldset>
}

