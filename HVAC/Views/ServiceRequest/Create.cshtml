@model HVAC.Models.ServiceRequestVM

@{
    ViewBag.Title = "Create";
    ViewBag.pTitle = "Service Request";
    ViewBag.pageTitle = "HVAC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/assets/libs/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
}

<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

@using (Html.BeginForm("Create", "ServiceRequest", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    
    <div class="card">
        <div class="card-header">
            <h4 class="card-title mb-0">Create New Service Request</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="CustomerID" class="form-label">Customer <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(model => model.CustomerID, ViewBag.CustomerID as SelectList, "Select Customer", new { @class = "form-control select2", required = "required", @onchange = "loadEquipmentByCustomer()" })
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="EquipmentID" class="form-label">Equipment <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(model => model.EquipmentID, ViewBag.EquipmentID as SelectList, "Select Equipment", new { @class = "form-control select2", required = "required" })
                        @Html.ValidationMessageFor(model => model.EquipmentID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <label for="ServiceTypeID" class="form-label">Service Type <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(model => model.ServiceTypeID, ViewBag.ServiceTypeID as SelectList, "Select Service Type", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.ServiceTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label for="PriorityID" class="form-label">Priority <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(model => model.PriorityID, ViewBag.PriorityID as SelectList, "Select Priority", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label for="ServiceStatusID" class="form-label">Status <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(model => model.ServiceStatusID, ViewBag.ServiceStatusID as SelectList, "Select Status", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.ServiceStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="mb-3">
                        <label for="ServiceDescription" class="form-label">Service Description <span class="text-danger">*</span></label>
                        @Html.TextAreaFor(model => model.ServiceDescription, new { @class = "form-control", @rows = "4", @placeholder = "Describe the service required...", required = "required" })
                        @Html.ValidationMessageFor(model => model.ServiceDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="ContactPerson" class="form-label">Contact Person</label>
                        @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control", @placeholder = "Contact person name" })
                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="ContactPhone" class="form-label">Contact Phone</label>
                        @Html.TextBoxFor(model => model.ContactPhone, new { @class = "form-control", @placeholder = "Contact phone number" })
                        @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="ContactEmail" class="form-label">Contact Email</label>
                        @Html.TextBoxFor(model => model.ContactEmail, new { @class = "form-control", @type = "email", @placeholder = "Contact email address" })
                        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="Location" class="form-label">Service Location</label>
                        @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @placeholder = "Service location" })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="ScheduledDate" class="form-label">Scheduled Date</label>
                        @Html.TextBoxFor(model => model.ScheduledDate, new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.ScheduledDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="AssignedTo" class="form-label">Assigned To</label>
                        @Html.TextBoxFor(model => model.AssignedTo, new { @class = "form-control", @placeholder = "Technician name" })
                        @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="EstimatedCost" class="form-label">Estimated Cost</label>
                        @Html.TextBoxFor(model => model.EstimatedCost, new { @class = "form-control", @type = "number", @step = "0.01", @placeholder = "0.00" })
                        @Html.ValidationMessageFor(model => model.EstimatedCost, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="ActualCost" class="form-label">Actual Cost</label>
                        @Html.TextBoxFor(model => model.ActualCost, new { @class = "form-control", @type = "number", @step = "0.01", @placeholder = "0.00" })
                        @Html.ValidationMessageFor(model => model.ActualCost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="mb-3">
                        <label for="Remarks" class="form-label">Remarks</label>
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @rows = "3", @placeholder = "Additional remarks or notes..." })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="text-end">
                <a href="@Url.Action("Index")" class="btn btn-secondary me-2">Cancel</a>
                <button type="submit" class="btn btn-primary">Create Service Request</button>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $('.select2').select2({
            placeholder: 'Select an option',
            allowClear: true
        });

        // Form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    });

    function loadEquipmentByCustomer() {
        var customerId = $('#CustomerID').val();
        if (customerId) {
            $.ajax({
                url: '/ServiceRequest/GetEquipmentByCustomer',
                type: 'GET',
                data: { customerId: customerId },
                success: function (data) {
                    var equipmentDropdown = $('#EquipmentID');
                    equipmentDropdown.empty();
                    equipmentDropdown.append('<option value="">Select Equipment</option>');
                    
                    $.each(data, function (index, item) {
                        equipmentDropdown.append('<option value="' + item.ID + '">' + item.EquipmentName + '</option>');
                    });
                },
                error: function () {
                    console.log('Error loading equipment');
                }
            });
        }
    }
</script>
