<!-- ========== Left Sidebar Start ========== -->
<div class="vertical-menu">
    @{ string UserName = "";

        if (Session["UserName"] != null)
        {
            UserName = Session["UserName"].ToString();
        }
        List<int> RoleId = (List<int>)Session["RoleID"];
    }
    <div class="">
        <div data-simplebar class="h-100">

            <!--- Sidemenu -->
            <div id="sidebar-menu">
            <!-- Left Menu Start -->
            <ul class="metismenu list-unstyled" id="side-menu">
                    <li class="menu-title" key="t-menu">Menu</li>

                    @{
                        HVAC.Models.SourceMastersModel obj = new HVAC.Models.SourceMastersModel();

                        List<HVAC.Models.Menu> menuList = obj.GetMenuSidebar(Convert.ToInt32(@Session["UserRoleID"].ToString()));  // (List<HVAC.Models.Menu>)Session["Menu"];
                        List<HVAC.Models.Menu> parentMenu = new List<HVAC.Models.Menu>();

                        //List<HVAC.Models.MenuVM> menuList = (List<HVAC.Models.MenuVM>)Session["Menu"];
                        //List<HVAC.Models.MenuVM> parentMenu = new List<HVAC.Models.MenuVM>();
                        if (menuList != null)
                        {
                            parentMenu = menuList.Where(p => Convert.ToInt32(p.ParentID) == 0).ToList();
                        }

                        if (parentMenu != null)
                        {
                            foreach (var item in parentMenu)
                            {

                                int menuid = Convert.ToInt32(item.MenuID);
                                if (item.PermissionRequired.HasValue && item.PermissionRequired.Value)
                                {
                                    if (obj.IsAccessibleMenu(menuid, RoleId))
                                    {

                                        <li>
                                            <a href="javascript:void(0);" class="has-arrow waves-effect" aria-expanded="false" id="@item.MenuID">
                                                <i class="bx bx-tone"></i>
                                                <span key="t-ui-elements">@item.Title</span>
                                            </a>
                                            @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                            {
                                                @:<ul class="sub-menu mm-collapse" aria-expanded="true">
                                                }

                                            @RenderMenuList(menuList, item)
                                            @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                            {
                                            @:</ul>
                                        }
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="">
                                        <a class="has-arrow waves-effect" href="#">
                                            <i class="@item.imgclass"></i>
                                            <span key="t-maps">@item.Title</span>
                                        </a>


                                        @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                        {
                                            @: <ul class="sub-menu" aria-expanded="false">
                                            }

                                        @RenderMenuList(menuList, item)
                                        @if (menuList.Count(p => p.ParentID == item.MenuID) > 0)
                                        {
                                        @:</ul>
                                    }
                                    </li>
                                }

                            }
                        }


                        @helper RenderMenuList(List<HVAC.Models.Menu> menuList, HVAC.Models.Menu mi)
                        {
                            foreach (var item1 in menuList.Where(p => p.ParentID == mi.MenuID))
                            {

                                if (menuList.Count(p => p.ParentID == item1.MenuID) > 0)
                                {
                                    @:<li class="">
                                        <a class="has-arrow waves-effect" href=@item1.Link aria-expanded="false">
                                            @item1.Title
                                        </a>
                                        @:<ul class="sub-menu mm-collapse">
                                        }

                                        @RenderMenuList(menuList, item1)
                                        if (menuList.Count(p => p.ParentID == item1.MenuID) > 0)
                                        {
                                        @:</ul>
                                    @:</li>
                                }
                                else
                                {
                                    @:<li class="">
                                        @: <a class="waves-effect" href=@item1.Link>
                                            @item1.Title
                                        @:</a></li>
                                    }
                                }
                        }

                    }
                    <li class="menu-title" key="t-components">Quick Menus</li>
                </ul>
            </div>-->
            <!-- Sidebar -->
            </div>
          

        </div>
    </div>
        <!-- Left Sidebar End -->
