@model HVAC.Models.CustmorVM

@{


    ViewBag.pTitle = "Manage Customer";
    ViewBag.pageTitle = "Account Receivable";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    //$(function () {
    //    $('#OfficeTimeFrom').datetimepicker({ format: 'HH:mm' });
    //});

    //$(function () {
    //    $('#OfficeTimeTo').datetimepicker({ format: 'HH:mm' });
    //});
    $(function () {
        $('#TransactionStartDate').datepicker({ dateFormat: 'dd-mm-yy' });

    });

    $(function () {
        $('#AMCEndDate').datepicker({ dateFormat: 'dd-mm-yy' });

    });
    $(function () {
        $('#AMCStartDate').datepicker({ dateFormat: 'dd-mm-yy' });

    });
</script>

<script type="text/javascript">
    function is_url(str) {
        regexp = /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/;
        if (regexp.test(str)) {
            $("#validations").html('* Please fill mandatory fields!');
            return true;
        }
        else {
            $("#validations").html('Invalid Website Link!');
            return false;
        }
    }
    function checkmobileno(inputtxt) {
        debugger;
        //var phoneno = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        //var phoneno = /^[0-9]{10}$/;
        //var phoneno = /(?([0-9]{3})\)?[-. ]?^[0-9]{10}$/;
        //if (inputtxt.match(phoneno)) {
        //    $("#validations").html('* Please fill mandatory fields!');
        //    return true;
        //}
        //else {
        //    $("#validations").html('The Mobile Number entered is invalid!');
        //    return false;
        //}

        return true;
    }
    function checkPhoneNumber(phoneNo) {
        //var phoneRE = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; ///^\(\d\d\d\) \d\d\d-\d\d\d\d$/;
        //if (phoneNo.match(phoneRE)) {
        //    $("#validations").html('* Please fill mandatory fields!');
        //    return true;
        //} else {
        //    $("#validations").html('The phone number entered is invalid!');

            //return false;
        //}
        return true;
    }
    function checkNumeric(numtext) {
        //^[1-9]\d * (\.\d +)?$
        var NumericRE = /^-?(0|[1-9]\d*)(\.\d+)?$/; ///^\^[1-9]\d * (\.\d +)?$/;
        if (numtext.match(NumericRE)) {
            $("#validations").html('* Please fill mandatory fields!');
            return true;
        } else {
            $("#validations").html('Invalid Credit Limit!');
            return false;
        }
    }
    function checkNumericGeneric(numtext) {
        //^[1-9]\d * (\.\d +)?$
        var NumericRE = /^-?(0|[1-9]\d*)(\.\d+)?$/; ///^\^[1-9]\d * (\.\d +)?$/;
        if (numtext.match(NumericRE)) {
          
            return true;
        } else {
            
            return false;
        }
    }
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $(":password").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

        if (@ViewBag.UserRoleId == 1) { //if admin
            if ($('#CustomerType').val() == 'CS') {
                $('#divApprove').removeClass('hide');
                $('#ApprovedOn').val('');
            }
        }
        //$("#Email").val('');
        //$("#Password").val('');

        $("#CustomerName").focus();

        $('#CustomerType1').val($('#CustomerType').val()).trigger('change');
        $("#CityID").empty();
        $("#LocationID").empty();
        if ($('#CustomerType').val() == 'CL') {

            $("#btnCLApprove").prop('checked', true);
        }
        else if ($('#CustomerType').val() == 'CR') {

            $("#btnApprove").prop('checked', true);
        }


        $("#CustomerName").change(function () {

            //$.ajax({
            //    type: "POST",
            //    url: "/CustomerMaster/GetCustomerCode",
            //    datatype: "Json",
            //    data: { custname: $("#CustomerName").val() },
            //    success: function (result) {
            //        debugger;

            //            $('#CustomerCode').val(result.data)
            //        // BindCity(data.CityID, data.LocationID);
            //    }
            //});

        });

        $("#btnApprove").change(function () {
            var cust = $("#CustomerType1 option:selected").val();
            if ($('#btnApprove').is(':checked')) {
                $("#validations").html('');
                $("#CustomerType").val("CR");
                $("#CustomerType1").val("CR").trigger('change');
                $('#btnCLApprove').prop('checked', false);
                var d = new Date();
                var curr_date = d.getDate();
                var curr_month = d.getMonth() + 1;
                var curr_year = d.getFullYear();

                var newdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();
                $("#txtApprovedBy").val($('#ApprovedUserName').val());
                $('#txtApprovedOn').val(newdate);
                $('#ApprovedOn').val(newdate);
            }
            else {
                $("#CustomerType").val("CS");
                $("#CustomerType1").val("CS").trigger('change');
                $('#btnCLApprove').prop('checked', false);
                $("#validations").html('')
                $("#txtApprovedBy").val('');
                $('#ApprovedOn').val('');
            }

        });
        $("#btnApprove").click(function () {
            debugger;
            $("#validations").html("Plesae Fill mandatory details to Approve Customer!")
            var cust = $("#CustomerType1 option:selected").val();
            var name = $("#CustomerName").val();
            var code = $("#CustomerCode").val();
            var add1 = $("#Address1").val();
            var con = $("#ContactPerson").val();
            var cou = $("#CountryName").val();
            var city = $("#CityName").val();
            var loc = $("#LocationName").val();
            var curr = $("#CurrenceyID option:selected").val();
            var mobile = $("#Mobile").val();
            var trn = $("#VATTRN").val();
            var phone = $("#Phone").val();
            var cre = $("#CreditLimit").val();
            var emp = $("#EmployeeID").val();
            var email = $("#Email").val();
            var pass = $("#Password").val();
            var website = $("#Website").val();
            if (cust == "") {
                $("#validations").show();
                $("#CustomerType").focus();
                return false;
            }
            else if (name == "") {
                $("#validations").show();
                $("#CustomerName").focus();
                return false;
            }
            else if (cou == "") {
                $("#validations").show();
                $("#CountryName").focus();
                return false;
            }
            //else if (code == "") {
            //    $("#validations").show();
            //    $("#CustomerCode").focus();
            //    return false;
            //}
            else if (add1 == "") {
                $("#validations").show();
                $("#Address1").focus();
                return false;
            }
            else if (con == "") {
                $("#validations").show();
                $("#ContactPerson").focus();
                return false;
            }
            //else if (code == "") {
            //    $("#validations").show();
            //    $("#CustomerCode").focus();
            //    return false;
            //}

            else if (city == "") {
                $("#validations").show();
                $("#CityName").focus();
                return false;
            }
            else if (loc == "") {
                $("#validations").show();
                $("#LocationName").focus();
                return false;
            }
            else if (curr == "") {
                $("#validations").show();
                $("#CurrenceyID").focus();
                return false;
            }
            else if (mobile == "") {
                $("#validations").show();
                $("#Mobile").focus();
                return false;
            }
            //else if (trn == "") {
            //    $("#VATTRN").focus();
            //    $("#validations").show();
            //    return false;
            //}
            else if (email == "") {
                $("#validations").show();
                $("#Email").focus();
                return false;
            }

            if (cre != "") {
                if (checkNumeric(cre) == false) {
                    $("#CreditLimit").focus();
                    $("#validations").show();
                    return false;
                }
            }


        });


        $("#btnCLApprove").change(function () {

            if ($('#btnCLApprove').is(':checked')) {
                $("#validations").html('');
                $("#CustomerType").val("CL");
                $("#CustomerType1").val("CL").trigger('change');
                //$('#btnApprove').removeAttr('checked');
                $('#btnApprove').prop('checked',false);
                var d = new Date();
                var curr_date = d.getDate();
                var curr_month = d.getMonth() + 1;
                var curr_year = d.getFullYear();

                var newdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();
                $("#txtApprovedBy").val($('#ApprovedUserName').val());
                $('#txtApprovedOn').val(newdate);
                $('#ApprovedOn').val(newdate);
            }
            else {
                $("#CustomerType").val('CS');
                $("#CustomerType1").val('CS').trigger('change');
                $('#btnApprove').prop('checked', false);
                $("#validations").html('')
                $("#txtApprovedBy").val('');
                $('#ApprovedOn').val('');
            }


        });
        $("#btnCLApprove").click(function () {
            debugger;
            $("#validations").html("Plesae Fill mandatory details to Approve Customer!")
            var cust = $("#CustomerType1 option:selected").val();
            var name = $("#CustomerName").val();
            var code = $("#CustomerCode").val();
            var add1 = $("#Address1").val();
            var con = $("#ContactPerson").val();
            var cou = $("#CountryName").val();
            var city = $("#CityName").val();
            var loc = $("#LocationName").val();
            var curr = $("#CurrenceyID option:selected").val();
            var mobile = $("#Mobile").val();
            var trn = $("#VATTRN").val();
            var phone = $("#Phone").val();
            var cre = $("#CreditLimit").val();
            var emp = $("#EmployeeID").val();
            var email = $("#Email").val();
            var pass = $("#Password").val();
            var website = $("#Website").val();
            if (cust == "") {
                $("#validations").show();
                $("#CustomerType").focus();
                return false;
            }
            else if (name == "") {
                $("#validations").show();
                $("#CustomerName").focus();
                return false;
            }
            else if (cou == "") {
                $("#validations").show();
                $("#CountryName").focus();
                return false;
            }
            //else if (code == "") {
            //    $("#validations").show();
            //    $("#CustomerCode").focus();
            //    return false;
            //}
            else if (add1 == "") {
                $("#validations").show();
                $("#Address1").focus();
                return false;
            }
            else if (con == "") {
                $("#validations").show();
                $("#ContactPerson").focus();
                return false;
            }
            //else if (code == "") {
            //    $("#validations").show();
            //    $("#CustomerCode").focus();
            //    return false;
            //}

            else if (city == "") {
                $("#validations").show();
                $("#CityName").focus();
                return false;
            }
            else if (loc == "") {
                $("#validations").show();
                $("#LocationName").focus();
                return false;
            }
            else if (curr == "") {
                $("#validations").show();
                $("#CurrenceyID").focus();
                return false;
            }
            else if (mobile == "") {
                $("#validations").show();
                $("#Mobile").focus();
                return false;
            }
            //else if (trn == "") {
            //    $("#VATTRN").focus();
            //    $("#validations").show();
            //    return false;
            //}
            else if (email == "") {
                $("#validations").show();
                $("#Email").focus();
                return false;
            }

            if (cre != "") {
                if (checkNumeric(cre) == false) {
                    $("#CreditLimit").focus();
                    $("#validations").show();
                    return false;
                }
            }
            if ((cust == "CS" || cust=="CR") && $('#btnCLApprove').is(':checked')) {
                $("#validations").html('');
                $("#CustomerType").val("CL");
                $("#CustomerType1").val("CL").trigger('change');
                //$('#btnApprove').removeAttr('checked');
                $('#btnApprove').prop('checked', 'false');
                var d = new Date();
                var curr_date = d.getDate();
                var curr_month = d.getMonth() + 1;
                var curr_year = d.getFullYear();

                var newdate = curr_date + "-" + curr_month + "-" + curr_year + ' ' + d.getHours() + ':' + d.getMinutes();
                $("#txtApprovedBy").val($('#ApprovedUserName').val());
                $('#txtApprovedOn').val(newdate);
                $('#ApprovedOn').val(newdate);
            }
            else {
                $("#CustomerType").val('CS');
                $("#CustomerType1").val('CS').trigger('change');
                $('#btnApprove').prop('checked', 'false');
                $("#validations").html('')
                $("#txtApprovedBy").val('');
                $('#ApprovedOn').val('');
            }

        });

        $("#btnsave").click(function () {
            debugger;
            var cust = $("#CustomerType1 option:selected").val();
            var name = $("#CustomerName").val();
            var code = $("#CustomerCode").val();
            var add1 = $("#Address1").val();
            var con = $("#ContactPerson").val();
            //var cou = $("#CountryID option:selected").val();
            //var city = $("#CityID option:selected").val();
            //var loc = $("#LocationID option:selected").val();
            var trn = $("#VATTRN").val();
            var cou = $("#CountryName").val();
            var city = $("#CityName").val();
            var loc = $("#LocationName").val();
            var curr = $("#CurrenceyID option:selected").val();
            var mobile = $("#Mobile").val();
            var phone = $("#Phone").val();
            var cre = $("#CreditLimit").val();
            var emp = $("#EmployeeID").val();
            var email = $("#Email").val();
            var pass = $("#Password").val();
            var website = $("#Website").val();
            $("#validations").html('* Please fill mandatory fields!');

            if (cust == "") {
                $("#validations").show();
                $("#CustomerType").focus();
                return false;
            }
            else if (name == "") {
                $("#validations").show();
                $("#CustomerName").focus();
                return false;
            }
            else if (cou == "" && ($("#CountryID").val() == 0 || $("#CountryID").val() == "")) {
                $("#CountryName").val('');
                $("#validations").show();
                $("#CountryName").focus();
                return false;
            }
            debugger
            var _amcamount = $('#AMCAmount').val();
            if (_amcamount != null && _amcamount != "") {
                var isamcamountnumeric = checkNumericGeneric(_amcamount)
                if (isamcamountnumeric != true) {
                    $("#validations").html("AMCAmount allowed in numeric formate");
                    $("#validations").show();
                    $("#AMCAmount").focus();
                    return false;
                }
            } 
            var amccontractmyfile = $('#AMCContractFile').val();
            if (amccontractmyfile != null && amccontractmyfile != "") {
                var ext = amccontractmyfile.split('.').pop();
                if (ext == "pdf") {

                } else {
                    $("#validations").html("Only Pdf file allowed for amc contract");
                    $("#validations").show();
                    $("#AMCContractFile").focus();
                    return false;
                }
            }
            if (cust != "CR" && cust != "" && name != "" && cou != "")  {
                 $("#validations").hide();
                return true;
            }
            //for credit
            //if (code == "") {
            //    $("#validations").show();
            //    $("#CustomerCode").focus();
            //    return false;
            //}
             if (add1 == "") {
                $("#validations").show();
                $("#Address1").focus();
                return false;
            }
            else if (con == "") {
                $("#validations").show();
                $("#ContactPerson").focus();
                return false;
            }
            //else if (code == "") {
            //    $("#validations").show();
            //    $("#CustomerCode").focus();
            //    return false;
            //}

            else if (city == "") {
                $("#validations").show();
                $("#CityName").focus();
                return false;
            }
            else if (loc == "") {
                $("#validations").show();
                $("#LocationName").focus();
                return false;
            }
            else if (curr == "") {
                $("#validations").show();
                $("#CurrenceyID").focus();
                return false;
            }
            //else if (mobile == "") {
            //    $("#validations").show();
            //    $("#Mobile").focus();
            //    return false;
            //}
            //else if (phone == "") {
            //    $("#validations").show();
            //    return false;
            //}
            //else if (cre == "") {
            //    $("#validations").show();
            //    return false;
            //}
            //else if (emp == "") {
            //    $("#EmployeeID").focus();
            //    $("#validations").show();
            //    return false;
            //}
            //else if (email == "") {
            //    $("#validations").show();
            //    $("#Email").focus();
            //    return false;
            //}
            //else if (trn == "") {
            //    $("#VATTRN").focus();
            //    $("#validations").show();
            //    return false;
            //}
            //else if (pass == "") {
            //    $("#validations").show();
            //    return false;
            //}

            //if (cre != "") {
            //    if (checkNumeric(cre) == false) {
            //        $("#CreditLimit").focus();
            //        $("#validations").show();
            //        return false;
            //    }
            //}

            if (phone != "") {
                debugger;
                if (checkPhoneNumber(phone) == false) {
                    $("#PhoneNo").focus();
                    $("#validations").show();
                    return false;
                }

            }
            if (mobile != "") {
                debugger;
                if (checkmobileno(mobile) == false) {
                    $("#Mobile").focus();
                    $("#validations").show();
                    return false;
                }
                else if ($('#countrycode').val() == '971') {
                    var mobileno = $('#Mobile').val();
                    mobileno = mobileno.replace(mobileno, $('#countrycode').val());
                    if (mobileno.substring(0, 1) != '5') {
                        alert('Pls ensure that you are not entering landline in mobile');
                        return false;
                    }
                }
            }
          
            if (website.trim() != "") {
                debugger;
                if (is_url(website.trim()) == false) {
                    $("#WebSite").focus();
                    $("#validations").show();
                    return false;
                }
                else {
                    $("#validations").hide();
                    return true;
                }
            }
            else {

                debugger;
                $.ajax({
                    type: "Get",
                    url: "/EmployeeMaster/CheckUserEmailExist",
                    datatype: "Json",
                    data: { EmailId: $('#Email').val() },
                    success: function (data) {
                        debugger;
                        console.log(data);
                        if (data == "true") {
                            $("#validations").html("User Emailid already exists!");
                            $("#validations").show();
                            return false;
                        }
                        else {
                            $("#validations").hide();
                            return true;
                            //                var valdata = $("#Myform").serialize();
                            ////to get alert popup
                            //alert(valdata);
                            //$.ajax({
                            //    url: "/CustomerMaster/Create",
                            //    type: "POST",
                            //    dataType: 'json',
                            //    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                            //    data: valdata
                            //});
                            //                $('#Myform').trigger('submit')
                            //return true;
                        }



                    }
                });
            }
            //$("#validations").hide();
            //     return true;
           
            
        });




    });
</script>


<script>
    function getcountryphonecode(countrycode) {
        $.getJSON("/countrycode.json", function (data) {
            var items = [];
            $.each(data, function (key, item) {
                if (item.code == countrycode) {
                    debugger;
                    $('#Mobile').val(item.dial_code.replace('+', ''));
                    $('#CountryCode').val(item.dial_code.replace('+', ''));
                    $('#lblcountrycode').html($('#CountryCode').val());
                }
                // items.push("<li id='" + key + "'>" + val + "</li>");
            });
        });
    }
    $(document).ready(function () {
        $('#CountryName').change(function () {
            if ($('#CountryName').val() != '') {
                getcountryphonecode($('#CountryName').val());
            }
        })

        $('#CountryName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCountryList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CountryName,
                                value: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CountryName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#CountryName').val(ui.item.label);

                return false;
            }
        });
        $('#CityName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCityList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.City,
                                value: val.City,
                                Country: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });


        $('#LocationName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetLocationList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Location,
                                value: val.Location,
                                City: val.CityName,
                                Country: val.CountryName
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            select: function (e, ui) {
                e.preventDefault();
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });
    });
</script>


@if (TempData["ErrorMsg"] != null)
{
    <script type="text/javascript">
                 $(document).ready(function () {
                     $.notify("@TempData["ErrorMsg"]", "error");
                 });
    </script>
}

@using (Html.BeginForm("Create", "CustomerMaster", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation ", @novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div id="validations" style="color: red; margin-left: 7px; display: none">* Please fill mandatory fields</div>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#CustDetail" type="button" role="tab" aria-controls="home" aria-selected="true">Customer Detail</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#CustAdditionalDetail" type="button" role="tab" aria-controls="profile" aria-selected="false">Additional Detail</button>
        </li>

    </ul>
    <fieldset>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8"></div>
                    <div class="col-md-4 text-md-end">
                        <input type="submit" value="Save" class="btn btn-success" id="btnsave" />
                        <a href='@Url.Action("Index", "CustomerMaster", new { id = 0 })' class="btn btn-secondary" data-placement="right">Cancel</a>
                    </div>
                    <div class="tab-content" id="myTabContent">

                        <div class="tab-pane fade show active" id="CustDetail" role="tabpanel" aria-labelledby="home-tab">
                            <div class="row">

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        @Html.HiddenFor(model => model.CustomerID)
                                        @Html.HiddenFor(model => model.CityID)
                                        @Html.HiddenFor(model => model.CountryID)
                                        @Html.HiddenFor(model => model.LocationID)
                                        @Html.HiddenFor(model => model.LocationID)
                                        @Html.HiddenFor(model => model.CustomerType)
                                        @Html.HiddenFor(model => model.PlaceID)
                                        @Html.HiddenFor(model => model.CountryCode)
                                        <label class="col-form-label required">Customer Type</label>
                                        @Html.DropDownList("CustomerType1", new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="Credit", Value = "CR" },
                                        new SelectListItem{ Text="Cash", Value = "CS" },
                                        new SelectListItem{ Text="CO-Loader", Value = "CL" },

                                     }, new { @class = "form-select", @readonly = "readonly", @disabled = "disabled" })


                                        @*@Html.DropDownListFor(model => model.CustomerTypeId, new SelectList(@ViewBag.country, "CountryID", "CountryName"), "Select", new { @class = "form-control" })*@
                                        @Html.ValidationMessageFor(model => model.CustomerType)

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Customer Code</label>
                                        @*@Html.TextBoxFor(model => model.CustomerCode, new { @class = "form-control" })*@
                                        @Html.TextBox("CustomerCode", (string)ViewBag.CustomerNo, new { @class = "form-control", @style = "font-weight:700;font-size:13px; ", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.CustomerCode)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label required">Customer Name</label>
                                        @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.CustomerName)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Flat/Building</label>
                                        @Html.TextBoxFor(model => model.Address1, new { @class = "form-control txttarget" })
                                        @Html.ValidationMessageFor(model => model.Address1)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Street Name</label>
                                        @Html.TextBoxFor(model => model.Address2, new { @class = "form-control txttarget" })
                                        @Html.ValidationMessageFor(model => model.Address2)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Pincode</label>
                                        @Html.TextBoxFor(model => model.Address3, new { @class = "form-control txttarget" })
                                        @Html.ValidationMessageFor(model => model.Address3)
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Contact Person</label>
                                        @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control txttarget" })
                                        @Html.ValidationMessageFor(model => model.ContactPerson)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Location</label>
                                        @Html.TextBoxFor(mode => Model.LocationName, new { @class = "form-control txttarget" })
                                        @Html.ValidationMessageFor(model => model.LocationName)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">City</label>
                                        @Html.TextBoxFor(model => model.CityName, new { @class = "form-select" })
                                        @Html.ValidationMessageFor(model => model.CityName)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label required">Country</label>
                                        @Html.TextBoxFor(model => model.CountryName, new { @class = "form-select" })
                                        @Html.ValidationMessageFor(model => model.CountryName)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Currency</label>
                                        @Html.DropDownListFor(model => model.CurrenceyID, new SelectList(@ViewBag.currency, "CurrencyID", "CurrencyName"), "Select", new { @class = "form-select" })
                                        @Html.ValidationMessageFor(model => model.CurrenceyID)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Mobile</label><label class="headinglabel" id="lblcountrycode">@Model.CountryCode</label>
                                        @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control text-right", @placeholder = "XXX-XXXXXXXXXX", @maxlength = 25 })
                                        @Html.ValidationMessageFor(model => model.Mobile)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Phone</label>
                                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control text-right", @maxlength = 25, @placeholder = "XXX-XXX-XXXX" })
                                        @Html.ValidationMessageFor(model => model.Phone)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Website</label>
                                        @Html.TextBoxFor(model => model.Website, new { @class = "form-control", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.Website)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Max Credit Limit</label>
                                        @Html.TextBoxFor(model => model.CreditLimit, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CreditLimit)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Sale Executive</label>
                                        @Html.DropDownListFor(model => model.EmployeeID, new SelectList(@ViewBag.employee, "EmployeeID", "EmployeeName"), "Select", new { @class = "form-select" })
                                        @Html.ValidationMessageFor(model => model.EmployeeID)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">VAT TRN No.</label>
                                        @Html.TextBoxFor(model => model.VATTRN, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.VATTRN)

                                        @Html.HiddenFor(model => model.RoleID)
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Email</label>
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "search", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-2">
                                                <label class="col-form-label">Office Time From</label>
                                                @Html.TextBoxFor(model => model.OfficeTimeFrom, new { @class = "form-control", @type = "time" })
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="mb-2">
                                                <label class="col-form-label">Office Time To</label>
                                                @Html.TextBoxFor(model => model.OfficeTimeTo, new { @class = "form-control", @type = "time" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*<div class="col-md-3">
                                        <label class="headinglabel required">Password</label>
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password)
                                    </div>*@

                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Referal</label>
                                        @Html.TextBoxFor(model => model.Referal, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Referal)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label required">Business Type</label>
                                        @Html.DropDownListFor(model => model.BusinessTypeId, new SelectList(@ViewBag.businessType, "Id", "BusinessType1"), "Select", new { @class = "form-select" })
                                        @Html.ValidationMessageFor(model => model.BusinessTypeId)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <label class="required col-form-label">Branch</label>
                                    @Html.DropDownListFor(model => model.BranchID, new SelectList(ViewBag.Branches, "BranchID", "BranchName"), new { @class = "form-select txttarget", @required = "required" })
                                </div>
                                <div class="col-md-3 checkboxdesign justify-center mt-4">
                                    @Html.CheckBox("EmailNotify", new { @name = "EmailNotify" }) &nbsp
                                    <label class="col-form-label">Email Notification to Customer</label>
                                    @Html.ValidationMessageFor(model => model.EmailNotify)
                                </div>
                                <div class="col-md-1 checkboxdesign justify-center mt-4">
                                    @Html.CheckBox("StatusActive", new { @name = "StatusActive" }) &nbsp
                                    <label class="col-form-label">Active</label>
                                    @Html.ValidationMessageFor(model => model.StatusActive)
                                </div>
                                <div class="col-md-2 checkboxdesign mt-4">
                                    @Html.CheckBox("ChkApprovedBy", new { @name = "ChkApprovedBy", @id = "btnApprove" }) &nbsp
                                    <label class="col-form-label">Approve Customer</label>
                                </div>
                                <div class="col-md-3 checkboxdesign" style="padding-top: 30px; display: none">
                                    @Html.CheckBox("StatusCommission", new { @name = "StatusCommission" }) &nbsp
                                    <label class="col-form-label">Allow Commission To Courier</label>
                                    @Html.ValidationMessageFor(model => model.StatusCommission)
                                </div>
                                <div class="col-md-3 checkboxdesign" style="padding-top:30px; display: none">
                                    @Html.CheckBox("StatusTaxable", new { @name = "StatusTaxable" }) &nbsp
                                    <label class="col-form-label">Taxable</label>
                                    @Html.ValidationMessageFor(model => model.StatusTaxable)
                                </div>




                                <div class="col-md-6">

                                    <div class="row no-margin hide d-none" style="padding: 30px;border:1px solid #dedede;" id="divApprove">
                                        <div class="col-md-6">
                                            <label class="headinglabel">Approved By</label>
                                            <input type="text" class="form-control" id="txtApprovedBy" value="" readonly />
                                            @Html.HiddenFor(model => model.ApprovedBy)
                                            @Html.HiddenFor(model => model.ApprovedOn)
                                            @Html.HiddenFor(model => model.ApprovedUserName)
                                        </div>
                                        <div class="col-md-6">
                                            <label class="headinglabel">Approved On</label>
                                            <input type="text" class="form-control" id="txtApprovedOn" value="" readonly />
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="tab-pane fade" id="CustAdditionalDetail" role="tabpanel" aria-labelledby="profile-tab">

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="col-form-label">Business Start Date</label>
                                        <div class="docs-datepicker">
                                            <div class="input-group">
                                                @{
                                                    var _trndate = "";
                                                    if (@Model.TransactionStartDate != null)
                                                    {
                                                        _trndate = Model.TransactionStartDate.Value.ToShortDateString();
                                                    }
                                                }
                                                <input type="text" class="form-control docs-date" name="TransactionStartDate" id="TransactionStartDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@_trndate"
                                                       placeholder="Pick a date" autocomplete="off">
                                                <button type="button" class="btn btn-secondary docs-datepicker-trigger" disabled>
                                                    <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                                </button>
                                            </div>
                                            <div class="docs-datepicker-container"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="col-form-label">AMC StartDate</label>
                                        <div class="docs-datepicker">
                                            <div class="input-group">
                                                @{
                                                    var _AMCStartDate = "";
                                                    if (@Model.AMCStartDate != null)
                                                    {
                                                        _AMCStartDate = Model.AMCStartDate.Value.ToShortDateString();
                                                    }
                                                }
                                                <input type="text" class="form-control docs-date" name="AMCStartDate" id="AMCStartDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@_AMCStartDate"
                                                       placeholder="Pick a date" autocomplete="off">
                                                <button type="button" class="btn btn-secondary docs-datepicker-trigger" disabled>
                                                    <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                                </button>
                                            </div>
                                            <div class="docs-datepicker-container"></div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-3">
                                    <div class="mb-3">
                                        <label class="col-form-label">AMC EndDate</label>
                                        <div class="docs-datepicker">
                                            <div class="input-group">
                                                @{
                                                    var _AMCEndDate = "";
                                                    if (@Model.AMCEndDate != null)
                                                    {
                                                        _AMCEndDate = Model.AMCEndDate.Value.ToShortDateString();
                                                    }
                                                }
                                                <input type="text" class="form-control docs-date" name="AMCEndDate" id="AMCEndDate" data-date-format="dd/MM/yyyy" data-date-autoclose="true" data-provide="datepicker" value="@_AMCEndDate"
                                                       placeholder="Pick a date" autocomplete="off">
                                                <button type="button" class="btn btn-secondary docs-datepicker-trigger" disabled>
                                                    <i class="mdi mdi-calendar" aria-hidden="true"></i>
                                                </button>
                                            </div>
                                            <div class="docs-datepicker-container"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">AMC Amount</label>
                                        @Html.TextBoxFor(model => model.AMCAmount, new { @class = "form-control ", @maxlength = 25 })
                                        @Html.ValidationMessageFor(model => model.AMCAmount)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">Remarks</label>
                                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control ", @rows = "3", @col = "5" })
                                        @Html.ValidationMessageFor(model => model.Remarks)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="mb-2">
                                        <label class="col-form-label">AMC Contract</label>&nbsp;


                                        <input type="file" id="AMCContractFile" name="AMCContractFile" accept="application/pdf" />&nbsp;&nbsp;&nbsp;
                                        @if (!string.IsNullOrEmpty(@Model.AMCContract))
                                        {
                                            <a href="~//UploadFiles/@Model.AMCContract" target="_blank">@Model.AMCContract"</a>
                                        }
                                    </div>

                                </div>
                            </div>

                        </div>


                    </div>



                </div>
            </div>
        </div>

    </fieldset>


}





