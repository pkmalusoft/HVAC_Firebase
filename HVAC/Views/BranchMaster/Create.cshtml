@model HVAC.Models.BranchVM

@{
    ViewBag.Title = "Create";
    ViewBag.pTitle = "Branch";
    ViewBag.pageTitle = "Branch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    $(document).ready(function () {
        $('#CountryName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCountryList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.CountryName,
                                value: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CountryName').val(ui.item.label);
                return false;
            },
            focus: function (event, ui) {
                $('#CountryName').val(ui.item.label);

                return false;
            }
        });
        $('#CityName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetCityList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.City,
                                value: val.City,
                                Country: val.CountryName
                            }
                        }))
                    }
                });
            },
            minLength: 1,
            autoFocus: false,
            select: function (event, ui) {
                event.preventDefault();
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#CityName').val(ui.item.label);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });

        $('#TaxType').change(function () {
            if ($('#TaxType').val() == 1) {
                $('#VATRegistrationNo').attr('readonly', 'readonly');
                
                $('#VATRegistrationNo').removeAttr('required', 'required');
                $('#VATPercent').removeAttr('required', 'required');
                $('#VATPercent').attr('readonly', 'readonly');
                $('#VATAccountId').removeAttr('required');
                $('#VATAccountId').attr('readonly', 'readonly');
                $('#VATAccountId').removeClass('form-select');
                $('#VATAccountId').addClass('form-control');

            }
            else {
                $('#VATRegistrationNo').removeAttr('readonly', 'readonly');
                $('#VATRegistrationNo').attr('required', 'required');
                $('#VATPercent').removeAttr('readonly', 'readonly');
                $('#VATPercent').attr('required', 'required');
                $('#VATAccountId').removeAttr('readonly', 'readonly');
                $('#VATAccountId').attr('required', 'required');
                $('#VATAccountId').removeClass('form-control');
                $('#VATAccountId').addClass('form-select');

                
            }
        })
        $('#LocationName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetLocationList", "CountryMaster")",
                    data: { SearchText: request.term },
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Location,
                                value: val.Location,
                                City: val.CityName,
                                Country: val.CountryName
                            }
                        }))
                    }
                })
            },
            minLength: 1,
            autoFocus: false,
            select: function (e, ui) {
                e.preventDefault();
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            },
            focus: function (event, ui) {
                $('#LocationName').val(ui.item.label);
                $('#CityName').val(ui.item.City);
                $('#CountryName').val(ui.item.Country);
                return false;
            }
        });

        $('#TaxType').trigger('change');
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $(":text").css({ "border-radius": "5px" });
        $("select").css({ "border-radius": "5px" });

        $("#BranchName").focus();
        $("#btnsave").click(function () {
            var branch = $("#BranchName").val();
            var add1 = $("#Address1").val();
            var cou = $("#CountryName").val(); // $("#CountryID option:selected").val();
            var city = $("#CityName").val(); // $("#CityID option:selected").val();
            var loc = $("#LocationName").val(); // option:selected").val();
            var key = $("#KeyPerson").val();
            var des = $("#DesignationID option:selected").val();
            var yearid = $("#AcFinancialYearID").val();

            var phone = $("#Phone").val();
            var mob = $("#MobileNo1").val();
            var em = $("#EMail").val();
            var branchpre = $("#BranchPrefix").val();
            var curr = $("#CurrencyID option:selected").val();

            if (branch == "") {
                $("#validations").show();
                return false;
            }
            else if (add1 == "") {
                $("#validations").show();
                return false;
            }
            else if (cou == "") {
                $("#validations").show();
                return false;
            }
            else if (city == "") {
                $("#validations").show();
                return false;
            }
            else if (loc == "") {
                $("#validations").show();
                return false;
            }
            else if (key == "") {
                $("#validations").show();
                return false;
            }
            else if (key == "") {
                $("#validations").show();
                return false;
            }
            else if (phone == "") {
                $("#validations").show();
                return false;
            }
            else if (mob == "") {
                $("#validations").show();
                return false;
            }
            else if (em == "") {
                $("#validations").show();
                return false;
            }

            else if (branchpre == "") {
                $("#validations").show();
                return false;
            }
            else if (curr == "") {
                $("#validations").show();
                return false;
            }
            else if (cou == "") {
                $("#validations").show();
                return false;
            }
            else if (yearid == 0 || yearid == "" || yearid == null) {
                $("#validations").show();
                return false;
            }

            else {
                $("#validations").hide();
                return true;
            }
        });

    });
</script>


@using (Html.BeginForm("Create", "BranchMaster", FormMethod.Post, new { @class = "needs-validation ", @novalidate = "novalidate", @id = "quickAWB" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "needs-validation" })
    <div id="validations" style="color:red;margin-left:7px;display:none">* Please fill mandatory fields</div>
    <fieldset>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 text-md-end">
                        <input type="submit" value="Save" class="btn btn-success" data-toggle="tooltip" title="Click here" id="btnsave1" />
                        <a href='@Url.Action("Index", "BranchMaster", new { id = 0 })' class="btn btn-secondary" data-toggle="tooltip" data-placement="right" title="Click here">Cancel</a>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Branch Name</label>
                            @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control txttarget", @required = "required" })
                            @Html.ValidationMessageFor(model => model.BranchName)

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Address1</label>
                            @Html.TextBoxFor(model => model.Address1, new { @class = "form-control txttarget", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Address1)
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Address2</label>
                            @Html.TextBoxFor(model => model.Address2, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.Address2)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Address3</label>
                            @Html.TextBoxFor(model => model.Address3, new { @class = "form-control txttarget" })
                            @Html.ValidationMessageFor(model => model.Address3)

                        </div>
                    </div>


                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Location</label>
                            @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control", @required = "required" })
                            @*@Html.DropDownListFor(model => model.LocationID, new SelectList(@ViewBag.location, "LocationID", "Location"), "Select", new { @class = "form-control" })*@
                            @* @Html.DropDownList("LocationID", String.Empty)
                @Html.ValidationMessageFor(model => model.LocationID)*@
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">City</label>
                            @Html.TextBoxFor(model => model.CityName, new { @class = "form-select", id = "CityName", @required = "required" })
                            @*@Html.DropDownListFor(model => model.CityID, new SelectList(@ViewBag.city, "CityID", "City"), "Select", new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.CityID)
                        </div>
                    </div>


                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Country</label>
                            @Html.TextBoxFor(model => model.CountryName, new { @class = "form-select", id = "CountryName", @required = "required" })
                            @*@Html.DropDownListFor(model => model.CountryID, new SelectList(@ViewBag.country, "CountryID", "CountryName"), "Select", new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.CountryID)

                        </div>
                    </div>



                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Key Person</label>
                            @Html.TextBoxFor(model => model.KeyPerson, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.KeyPerson)

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Designation</label>
                            @Html.DropDownListFor(model => model.DesignationID, new SelectList(@ViewBag.designation, "DesignationID", "Designation1"), "Select", new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.DesignationID)

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Phone</label>
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control text-right", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Phone)

                        </div>
                    </div>


                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Mobile No 1</label>
                            @Html.TextBoxFor(model => model.MobileNo1, new { @class = "form-control text-right", @required = "required" })
                            @Html.ValidationMessageFor(model => model.MobileNo1)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">EMail</label>
                            @Html.TextBoxFor(model => model.EMail, new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(model => model.EMail)

                        </div>
                    </div>
                    @*<div class="col-md-3">
            <label class="headinglabel">Phone No 1</label>
            @Html.TextBoxFor(model => model.PhoneNo1, new { @class = "form-control textright" })
            @Html.ValidationMessageFor(model => model.PhoneNo1)

        </div>

        <div class="col-md-3">
            <label class="headinglabel">Phone No 2</label>
            @Html.TextBoxFor(model => model.PhoneNo2, new { @class = "form-control textright" })
            @Html.ValidationMessageFor(model => model.PhoneNo2)

        </div>*@



                    @*<div class="col-md-3">
            <label class="headinglabel">Phone No 3</label>
            @Html.TextBoxFor(model => model.PhoneNo3, new { @class = "form-control textright" })
            @Html.ValidationMessageFor(model => model.PhoneNo3)

        </div>

        <div class="col-md-3">
            <label class="headinglabel">Phone No 4</label>
            @Html.TextBoxFor(model => model.PhoneNo4, new { @class = "form-control textright" })
            @Html.ValidationMessageFor(model => model.PhoneNo4)

        </div>*@


                    @*<div class="col-md-3">
            <label class="headinglabel">Mobile No 2</label>
            @Html.TextBoxFor(model => model.MobileNo2, new { @class = "form-control textright" })
            @Html.ValidationMessageFor(model => model.MobileNo2)

        </div>*@


                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Website</label>
                            @Html.TextBoxFor(model => model.Website, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Website)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Currency</label>
                            @Html.DropDownListFor(model => model.CurrencyID, new SelectList(@ViewBag.currency, "CurrencyID", "CurrencyName"), "Select", new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.CurrencyID)

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Branch Prefix</label>
                            @Html.TextBoxFor(model => model.BranchPrefix, new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(model => model.BranchPrefix)

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Starting Invoice No.</label>
                            @Html.TextBoxFor(model => model.InvoiceNoStart, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InvoiceNoStart)

                        </div>
                    </div>

                    <div class="col-md-3 awbno">
                        <div class="mb-2">
                            <label class="col-form-label">Invoice Prefix</label>
                            @Html.TextBoxFor(model => model.InvoicePrefix, new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(model => model.InvoicePrefix)

                        </div>
                    </div>
                    <div class="col-md-3 awbno">
                        <div class="mb-2">
                            <label class="col-form-label">Invoice Format</label>
                            @Html.TextBoxFor(model => model.InvoiceFormat, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InvoiceFormat)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">Starting Invoice No.</label>
                            @Html.TextBoxFor(model => model.AWBFormat, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AWBFormat)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label required">Tax Type</label>
                            @Html.DropDownListFor(model => model.TaxType, ViewBag.transtypes as SelectList, new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.TaxType)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">VAT Registration No.</label>
                            @Html.TextBoxFor(model => model.VATRegistrationNo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VATRegistrationNo)

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-2">
                            <label class="col-form-label">VAT %</label>
                            @Html.TextBoxFor(model => model.VATPercent, new { @class = "form-control text-right", @onkeypress = "return isNumberKey(event)" })
                            @Html.ValidationMessageFor(model => model.VATPercent)

                        </div>
                    </div>
                    
                    <div class="col-md-1">
                        <div class="mb-2">
                            <label class="col-form-label required">Start Fin. Year</label>
                            @Html.DropDownListFor(model => model.AcFinancialYearID, new SelectList(@ViewBag.years, "AcFinancialYearID", "ReferenceName"), "Select", new { @class = "form-select", @required = "required" })
                            @Html.ValidationMessageFor(model => model.AcFinancialYearID)
                        </div>
                    </div>



                </div>
            </div>
      
    </fieldset>
}


